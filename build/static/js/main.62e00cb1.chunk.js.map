{"version":3,"sources":["components/ShortestPath.js","components/canvas.js","components/HomeComp.js","components/MST.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["v1","v2","adj","weights","parent","color1","done","timeouts","ShortestPath","props","state","points","edges","src","i","this","length","getRandomInt","reset","forceUpdate","push","event","x","clientX","refs","svg","getBoundingClientRect","left","y","clientY","top","x1","y1","setState","prev","e","document","getElementById","value","idx","u","style","fill","v","addWeights","vertex","edgeNo","stroke","textContent","dist","lx","rx","clientWidth","ly","ry","clientHeight","n","flag","setTimeout","getMousePosition","j","aq","drawLine","s","window","location","href","sptSet","min_index","min","ar","wt","vis","animations","color","it","minDist","alert","parseInt","dijkstraAnimations","len","tm","q","strokeWidth","primAnimations","pts","map","key","id","cx","cy","r","onClick","transition","cursor","onMouseOver","showPath","onMouseOut","removePath","ptsidx","pt","fontSize","fontFamily","lines","x2","y2","zIndex","edgeWeights","edge","dists","className","dijkstra","prim","randomWeights","clear","type","width","onChange","changeSrc","paintOrder","ref","innerWidth","height","innerHeight","border","backgroundColor","Component","max","Math","ceil","floor","random","Canvas","queue","shift","bfsAnimations","borderRadius","dfsutil","dfsAnimations","bfs","dfs","HomeComp","to","padding","MST","size","a","b","ra","root","rb","number","sort","arr","join","rt","kruskalAnimations","kruskal","MainComponent","path","component","App","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62e00cb1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './graph.css'\r\n\r\nlet v1=null,v2=null\r\nlet adj=[]\r\nvar delay=500\r\nlet weights=[]\r\nvar r=14\r\nvar INT_MAX=100000\r\nlet parent=[]\r\nlet color1='rgb(0, 204, 0)';\r\nlet done=false\r\nlet timeouts=[]\r\nexport class ShortestPath extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[],\r\n             edges:[],\r\n             src:0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n      //this.generateRandomGraph()\r\n    }\r\n    randomWeights(){\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        weights[i]=getRandomInt(1,50);\r\n        this.reset()\r\n        this.forceUpdate();\r\n    }\r\n    addWeights()\r\n    {\r\n        weights.push(getRandomInt(1,50))\r\n        this.forceUpdate()\r\n    }\r\n    getMousePosition(event)\r\n    {\r\n        this.reset()\r\n        done=false\r\n        let x = event.clientX-this.refs.svg.getBoundingClientRect().left\r\n        let y = event.clientY-this.refs.svg.getBoundingClientRect().top\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            let x1=this.state.points[i].x;\r\n            let y1=this.state.points[i].y;\r\n            let dist=(x-x1)*(x-x1)+(y-y1)*(y-y1);\r\n            if(dist<=1000)\r\n                return false;\r\n        }\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({x:x,y:y})\r\n        },function(){\r\n            adj.push([])\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeSrc(e){\r\n        this.reset()\r\n        done=false\r\n        let x=document.getElementById('src').value\r\n        this.setState({\r\n            src:x\r\n        })\r\n    }\r\n\r\n    drawLine(idx){\r\n        this.reset()\r\n        done=false\r\n        let u=document.getElementById(`point${idx}`);\r\n        u.style.fill='red';\r\n        if(v1===null)\r\n        v1=idx;\r\n        else {\r\n            v2=idx;\r\n            u=document.getElementById(`point${v1}`);\r\n            u.style.fill='#000';\r\n            u=document.getElementById(`point${v2}`);\r\n            u.style.fill='#000';\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(this.state.edges[i].u===v1 && this.state.edges[i].v===v2)\r\n                {   v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n                else if(this.state.edges[i].u===v2 && this.state.edges[i].v===v1)\r\n                {\r\n                    v1=null\r\n                    v2=null\r\n                    return\r\n                }\r\n            }\r\n            if(v1===v2)\r\n            {\r\n                v1=null\r\n                v2=null\r\n                return\r\n            }\r\n            this.setState((prev)=>{\r\n                edges:prev.edges.push({\r\n                    u:v1,\r\n                    v:v2\r\n                })\r\n            },function(){\r\n                this.addWeights()\r\n                adj[v1].push({vertex:v2,edgeNo:this.state.edges.length-1})\r\n                adj[v2].push({vertex:v1,edgeNo:this.state.edges.length-1})\r\n                v1=null\r\n                v2=null\r\n            })\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        done=false\r\n        for(let i=0;i<this.state.points.length;i++){\r\n            if(document.getElementById(`point${i}`).style.fill!=='red')\r\n            document.getElementById(`point${i}`).style.fill='#000'\r\n        }\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            document.getElementById(`edge${i}`).style.stroke='red'\r\n            document.getElementById(`weight${i}`).style.fill='black'\r\n        }\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            document.getElementById(`dist${i}`).textContent='∞';\r\n        }\r\n        parent=[]\r\n        this.forceUpdate();\r\n    }\r\n    clear(){\r\n        done=false\r\n        this.setState({\r\n            points:[],\r\n            edges:[],\r\n            dist:[]\r\n        },function(){\r\n            v1=null\r\n            v2=null\r\n            adj=[]\r\n            weights=[]\r\n            parent=[]\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //GENERATE RANDOM GRAPH\r\n    generateRandomGraph(){\r\n        let lx=this.refs.svg.getBoundingClientRect().left+15\r\n        let rx=this.refs.svg.getBoundingClientRect().left+this.refs.svg.clientWidth-15;\r\n\r\n        let ly=this.refs.svg.getBoundingClientRect().top+15\r\n        let ry=this.refs.svg.getBoundingClientRect().top+this.refs.svg.clientHeight-15;\r\n        let n=getRandomInt(5,12)\r\n        let i;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            let flag;\r\n            setTimeout(() => {\r\n                flag=this.getMousePosition({clientX:getRandomInt(lx,rx),clientY:getRandomInt(ly,ry)})\r\n            }, i*delay);\r\n            if(flag===false)\r\n            i--;\r\n        }\r\n        for(let j=1;j<=1.1*n;j++)\r\n        {\r\n            setTimeout(() => {\r\n                let aq=getRandomInt(0,n-1)\r\n                this.drawLine(aq)\r\n                aq=getRandomInt(0,n-1)\r\n                this.drawLine(\" \"+aq)\r\n            }, i*delay);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    showPath(s){\r\n        if(window.location.href==='https://pratims10.github.io/Graph-alogrithm-visualizer/#/PrimMST') return\r\n        if(done===false)\r\n        return\r\n        let i=parent[s]\r\n        document.getElementById(`point${s}`).style.fill='yellow'\r\n        document.getElementById(`index${s}`).style.fill='black'\r\n        if(typeof i===\"undefined\")\r\n        return\r\n        while(i.vertex!==-1)\r\n        {\r\n            document.getElementById(`edge${i.edgeNo}`).style.stroke='yellow'\r\n            document.getElementById(`point${i.vertex}`).style.fill='yellow'\r\n            document.getElementById(`index${i.vertex}`).style.fill='black'\r\n            i=parent[i.vertex]\r\n        }\r\n    }\r\n\r\n    removePath(s){\r\n        if(window.location.href==='https://pratims10.github.io/Graph-alogrithm-visualizer/#/PrimMST') return\r\n        if(done===false)\r\n        return\r\n        let i=parent[s]\r\n        document.getElementById(`point${s}`).style.fill=color1\r\n        document.getElementById(`index${s}`).style.fill='white'\r\n        if(typeof i===\"undefined\")\r\n        return\r\n        while(i.vertex!==-1)\r\n        {\r\n            document.getElementById(`edge${i.edgeNo}`).style.stroke='blue'\r\n            document.getElementById(`point${i.vertex}`).style.fill=color1\r\n            document.getElementById(`index${i.vertex}`).style.fill='white'\r\n            i=parent[i.vertex]\r\n        }\r\n    }\r\n\r\n    //DIJKSTRA'S SHORTEST PATH ALGORITHM\r\n    minDist(dist,sptSet) \r\n    {\r\n        // Initialize min value \r\n        let min = INT_MAX, min_index; \r\n        for (let v = 0; v < this.state.points.length; v++)\r\n            if (sptSet[v] === false && dist[v] <= min)\r\n                {\r\n                    min = dist[v]\r\n                    min_index = v\r\n                }\r\n        return min_index\r\n    }\r\n    dijkstraAnimations(s){\r\n        this.reset()\r\n        let ar=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            ar.push([])\r\n            for(let j=0;j<this.state.points.length;j++)\r\n            ar[i].push(0)\r\n        }\r\n        //forming adj matrix\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            ar[this.state.edges[i].u][this.state.edges[i].v]=({wt:weights[i],edgeNo:i})\r\n            ar[this.state.edges[i].v][this.state.edges[i].u]=({wt:weights[i],edgeNo:i})\r\n        }\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        vis[i]=false;\r\n        let animations=[]\r\n        let dist=[]\r\n        parent=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        dist[i]=100000\r\n        dist[s]=0\r\n        parent[s]={vertex:-1,edgeNo:-1}\r\n        animations.push({\r\n            x:s,\r\n            y:0,\r\n            color:'setdist'\r\n        })\r\n        for(let it=0;it<this.state.points.length;it++)\r\n        {\r\n            let u=this.minDist(dist,vis)\r\n            if(dist[u]===INT_MAX)\r\n            return animations;\r\n            vis[u]=true\r\n            animations.push({\r\n                x:u,\r\n                y:-1,\r\n                color:'confirmdist'\r\n            })\r\n            for(let v=0;v<this.state.points.length;v++)\r\n            {\r\n                if(!vis[v] && ar[u][v].wt && dist[u]+ar[u][v].wt<dist[v])\r\n                {\r\n                    parent[v]={vertex:u,edgeNo:ar[u][v].edgeNo}\r\n                    dist[v]=dist[u]+ar[u][v].wt\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'shrinkEdge'\r\n                    })\r\n                    animations.push({\r\n                        x:v,\r\n                        y:dist[v],\r\n                        color:'setdist'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return animations\r\n    }\r\n\r\n    dijkstra(s){\r\n        if(s>=this.state.points.length)\r\n        return\r\n        if(s===\"\" && s!=='0')\r\n        {\r\n            alert(\"Enter a source vertex\")\r\n            return\r\n        }\r\n        for(let i=0;i<s.length;i++)\r\n        {\r\n            if(s[i]!=='0' && s[i]!=='1' && s[i]!=='2' && s[i]!=='3' && s[i]!=='4' && s[i]!=='5' && s[i]!=='6' && s[i]!=='7' && s[i]!=='8' && s[i]!=='9')\r\n            {\r\n                alert(\"Enter an integer as source vertex\")\r\n                return\r\n            }\r\n        }\r\n        s=parseInt(s)\r\n        const animations=this.dijkstraAnimations(s)\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge'){\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='5'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='shrinkEdge')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='2'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='setdist')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill='blue'\r\n                    q=document.getElementById(`dist${animations[i].x}`);\r\n                    q.textContent=animations[i].y\r\n                    \r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n            else\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill=color1\r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n        }\r\n        done=true\r\n    }\r\n    \r\n    //PRIM'S ALGORITHM\r\n    minDist(dist,sptSet) \r\n    {\r\n        // Initialize min value \r\n        let min = INT_MAX, min_index; \r\n        for (let v = 0; v < this.state.points.length; v++) \r\n            if (sptSet[v] === false && dist[v] <= min) \r\n            {\r\n                min = dist[v]\r\n                min_index = v;\r\n            }\r\n        return min_index;\r\n    }\r\n    primAnimations(s){\r\n        this.reset()\r\n        let ar=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            ar.push([])\r\n            for(let j=0;j<this.state.points.length;j++)\r\n            ar[i].push(0)\r\n        }\r\n        //forming adj matrix\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            ar[this.state.edges[i].u][this.state.edges[i].v]=({wt:weights[i],edgeNo:i})\r\n            ar[this.state.edges[i].v][this.state.edges[i].u]=({wt:weights[i],edgeNo:i})\r\n        }\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        vis[i]=false;\r\n        let animations=[]\r\n        let dist=[]\r\n        parent=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        dist[i]=100000\r\n        dist[s]=0\r\n        parent[s]={vertex:-1,edgeNo:-1}\r\n        animations.push({\r\n            x:s,\r\n            y:0,\r\n            color:'setdist'\r\n        })\r\n        for(let it=0;it<this.state.points.length;it++)\r\n        {\r\n            let u=this.minDist(dist,vis)\r\n            if(dist[u]===INT_MAX)\r\n            return [];\r\n            vis[u]=true\r\n            animations.push({\r\n                x:u,\r\n                y:parent[u].edgeNo,\r\n                color:'confirmdist'\r\n            })\r\n            for(let v=0;v<this.state.points.length;v++)\r\n            {\r\n                if(!vis[v] && ar[u][v].wt && ar[u][v].wt<dist[v])\r\n                {\r\n                    parent[v]={vertex:u,edgeNo:ar[u][v].edgeNo}\r\n                    dist[v]=ar[u][v].wt\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'shrinkEdge'\r\n                    })\r\n                    animations.push({\r\n                        x:v,\r\n                        y:dist[v],\r\n                        color:'setdist'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        \r\n        return animations\r\n    }\r\n\r\n    prim(s){\r\n        if(s>=this.state.points.length)\r\n        return\r\n        if(s===\"\" && s!=='0')\r\n        {\r\n            alert(\"Enter a source vertex\")\r\n            return\r\n        }\r\n        for(let i=0;i<s.length;i++)\r\n        {\r\n            if(s[i]!=='0' && s[i]!=='1' && s[i]!=='2' && s[i]!=='3' && s[i]!=='4' && s[i]!=='5' && s[i]!=='6' && s[i]!=='7' && s[i]!=='8' && s[i]!=='9')\r\n            {\r\n                alert(\"Enter an integer as source vertex\")\r\n                return\r\n            }\r\n        }\r\n        s=parseInt(s)\r\n        const animations=this.primAnimations(s)\r\n        let len=animations.length\r\n        if(len===0) return\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge'){\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='5'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='shrinkEdge')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='2'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='setdist')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill='blue'\r\n                    q=document.getElementById(`dist${animations[i].x}`);\r\n                    q.textContent=animations[i].y\r\n                    \r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n            else\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill=color1\r\n                    if(animations[i].y!=-1) document.getElementById(`edge${animations[i].y}`).style.stroke=color1\r\n                }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n        }\r\n        let tm=setTimeout(() => {\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(document.getElementById(`edge${i}`).style.stroke!==color1)\r\n                {\r\n                    document.getElementById(`edge${i}`).style.stroke='#bfbfbf'\r\n                    document.getElementById(`weight${i}`).style.fill='#bfbfbf'\r\n                }\r\n            }\r\n        }, len*delay);\r\n        timeouts.push(tm)\r\n    }\r\n\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle key={\"point\"+idx} id={\"point\"+idx} cx={x.x} cy={x.y} r={r} stroke=\"black\" onClick={(event)=>this.drawLine(idx)} strokeWidth=\"2\" style={{fill:\"#000\",transition:'all .2s linear',cursor:'pointer'}} onMouseOver={()=>this.showPath(idx)} onMouseOut={()=>this.removePath(idx)}/>\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((pt,idx)=>{\r\n            return(\r\n                <text key={\"index\"+idx} id={\"index\"+idx} fontSize=\"14\" fontFamily=\"Arial\" x={pt.x-4} y={pt.y+4} onClick={(event)=>this.drawLine(idx)} style={{fill:\"#fff\",transition:'all .2s linear',cursor:'pointer'}} onMouseOver={()=>this.showPath(idx)} onMouseOut={()=>this.removePath(idx)}>{idx}</text>\r\n            )\r\n        })\r\n        var lines=this.state.edges.map((q,idx)=>{\r\n            return(\r\n                <line key={\"edge\"+idx} id={\"edge\"+idx} x1={this.state.points[q.u].x} y1={this.state.points[q.u].y} x2={this.state.points[q.v].x} y2={this.state.points[q.v].y} style={{stroke:'red',strokeWidth:'2',zIndex:'-1',transition:'all .2s linear'}} />\r\n            )\r\n        })\r\n        var edgeWeights=this.state.edges.map((edge,idx)=>{\r\n            return(\r\n                <text key={\"weight\"+idx} id={\"weight\"+idx} fontSize=\"14\" fontFamily=\"Arial\" fill=\"#000\" x={(this.state.points[edge.u].x+this.state.points[edge.v].x)/2.0} y={(this.state.points[edge.u].y+this.state.points[edge.v].y)/2.0} >{weights[idx]}</text>\r\n            )\r\n        })\r\n        var dists=this.state.points.map((x,idx)=>{\r\n            return(\r\n                <text key={\"dist\"+idx} id={\"dist\"+idx} fontSize='14' fontFamily='Arial' fill='#000' x={x.x+r+2} y={x.y+r+2}>&infin;</text>\r\n            )\r\n        })\r\n        \r\n        return (\r\n        <div>\r\n            <center>\r\n            {window.location.href==='https://pratims10.github.io/Graph-alogrithm-visualizer/#/dijkstra'?<h3>Dijkstra's Shortest Path Algorithm</h3>:<h3>Prim's Minimal Spanning Tree Algorithm</h3>}\r\n            {window.location.href==='/https://pratims10.github.io/Graph-alogrithm-visualizer/#/dijkstra'?<button className=\"button button4\" onClick={()=>this.dijkstra(this.state.src)}>Dijkstra's Algorithm</button> : <button className=\"button button4\" onClick={()=>this.prim(this.state.src)}>Prim's Algorithm</button>}\r\n\r\n            <button className=\"button button4\" onClick={()=>this.randomWeights()}>Randomize edge weights</button>\r\n            <button className=\"button button4\" onClick={()=>this.reset()}>Reset</button>\r\n            <button className=\"button button4\" onClick={()=>this.clear()}>Clear Canvas</button>\r\n            <text style={{fontFamily:'Georgia'}}>&nbsp;&nbsp;&nbsp;Source/Starting vertex&nbsp;</text>\r\n            <input type=\"text\" id=\"src\" value={this.state.src} style={{width:'25px'}} onChange={(e)=>this.changeSrc(e)} />\r\n            </center>\r\n            <center>\r\n            <svg paintOrder='markers' ref='svg' width={window.innerWidth*.995} height={window.innerHeight*.88} style={{border:'2px solid black',backgroundColor:'#dddddd',cursor:'crosshair'}} onClick={(event)=>this.getMousePosition(event)} >\r\n            {\r\n                window.location.href==='https://pratims10.github.io/Graph-alogrithm-visualizer/#/dijkstra'?<rect><title>1.Click to plot some points.&#13;2.Connect two points by clicking on them consecutively.&#13;3.Run the algorithm. &#13;4.Hover on any vertex to see the shortest path from the root vertex.</title></rect> : <rect><title>1.Click to plot some points.&#13;2.Connect two points by clicking on them consecutively.&#13;3.Run the algo and Enjoy!!!</title></rect>\r\n            }\r\n            {dists}\r\n            {edgeWeights}\r\n            {lines}\r\n            {pts}\r\n            {ptsidx}\r\n            </svg>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShortestPath\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","import React, { Component } from 'react'\r\nlet v1=null,v2=null;\r\nlet adj=[]\r\nvar delay=500\r\nvar color1='rgb(0, 204, 0)';\r\nexport class Canvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[],\r\n             edges:[],\r\n             src:0\r\n        }\r\n    }\r\n\r\n    getMousePosition(event) { \r\n        this.reset()\r\n        let x = event.clientX-this.refs.svg.getBoundingClientRect().left ;\r\n        let y = event.clientY-this.refs.svg.getBoundingClientRect().top;\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            let x1=this.state.points[i].x;\r\n            let y1=this.state.points[i].y;\r\n            let dist=(x-x1)*(x-x1)+(y-y1)*(y-y1);\r\n            if(dist<=900)\r\n            {\r\n                return;\r\n            }\r\n        }\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({\r\n                x:x,\r\n                y:y\r\n            })\r\n        },function(){\r\n            adj.push([])\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    drawLine(e,idx){\r\n        this.reset()\r\n        let u=document.getElementById(`point${idx}`);\r\n        u.style.fill='red';\r\n        if(v1===null)\r\n        v1=idx;\r\n        else {\r\n            v2=idx;\r\n            u=document.getElementById(`point${v1}`);\r\n            u.style.fill='#000';\r\n            u=document.getElementById(`point${v2}`);\r\n            u.style.fill='#000';\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(this.state.edges[i].u===v1 && this.state.edges[i].v===v2)\r\n                {   v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n                else if(this.state.edges[i].u===v2 && this.state.edges[i].v===v1)\r\n                {\r\n                    v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n            }\r\n            if(v1===v2)\r\n            {\r\n                v1=null\r\n                v2=null\r\n                return\r\n            }\r\n            this.setState((prev)=>{\r\n                edges:prev.edges.push({\r\n                    u:v1,\r\n                    v:v2\r\n                })\r\n            },function(){\r\n                adj[v1].push({vertex:v2,edgeNo:this.state.edges.length-1})\r\n                adj[v2].push({vertex:v1,edgeNo:this.state.edges.length-1})\r\n                v1=null\r\n                v2=null\r\n            })\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        for(let i=0;i<this.state.points.length;i++){\r\n            if(document.getElementById(`point${i}`).style.fill==='blue' || document.getElementById(`point${i}`).style.fill===color1)\r\n            document.getElementById(`point${i}`).style.fill='#000'\r\n        }\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            if(document.getElementById(`edge${i}`).style.stroke==='blue')\r\n            document.getElementById(`edge${i}`).style.stroke='red'\r\n        }\r\n    }\r\n    \r\n    changeSrc(e){\r\n        let x=document.getElementById('src').value\r\n        this.setState({\r\n            src:x\r\n        })\r\n    }\r\n\r\n    clear(){\r\n        this.setState({\r\n            points:[],\r\n            edges:[],\r\n            src:0\r\n        },function(){\r\n            v1=null\r\n            v2=null\r\n            adj=[]\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n    \r\n    //BFS TRAVERSAL OF GRAPH\r\n    bfsAnimations(s){\r\n        let animations=[]\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            vis[i]=false\r\n        }\r\n        let queue=[]\r\n        queue.push(s)\r\n        vis[s]=true;\r\n        while(queue.length!==0)\r\n        {\r\n            var x=queue[0]\r\n            queue.shift()\r\n            animations.push({\r\n                x:x,\r\n                y:-1,\r\n                color:color1\r\n            })\r\n            for(let i=0;i<adj[x].length;i++)\r\n            {\r\n                if(vis[adj[x][i].vertex]===false)\r\n                {\r\n                    vis[adj[x][i].vertex]=true;\r\n                    queue.push(adj[x][i].vertex)\r\n                    \r\n                    animations.push({\r\n                        x:adj[x][i].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:adj[x][i].edgeNo,\r\n                        y:-1,\r\n                        color:'shrinkEdge'\r\n                    })\r\n\r\n                    animations.push({\r\n                        x:adj[x][i].vertex,\r\n                        y:-1,\r\n                        color:'blue'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return animations\r\n    }\r\n\r\n    bfs(s){\r\n        if(s>=this.state.points.length)\r\n        return;\r\n        this.reset()\r\n        const animations=this.bfsAnimations(s)\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.stroke='blue'\r\n                    x1.style.strokeWidth='5'\r\n                    x1.style.borderRadius='2'\r\n                }, i*delay);\r\n            }\r\n            else if(animations[i].color==='shrinkEdge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.strokeWidth='2'\r\n                    x1.style.borderRadius='0'\r\n                }, i*delay);\r\n            }\r\n            else\r\n            {\r\n                    let x=document.getElementById(`point${animations[i].x}`)\r\n                    setTimeout(() => {\r\n                        x.style.fill=animations[i].color\r\n                    }, i*delay);\r\n            }\r\n        }\r\n    }\r\n\r\n    //DFS ALGORITHM\r\n    dfsutil(s,vis,animations){\r\n        animations.push({\r\n            x:s,\r\n            y:-1,\r\n            color:color1\r\n        })\r\n        vis[s]=true\r\n        for(let i=0;i<adj[s].length;i++)\r\n        {\r\n            if(!vis[adj[s][i].vertex])\r\n            {\r\n                animations.push({\r\n                    x:adj[s][i].edgeNo,\r\n                    y:-1,\r\n                    color:'edge'\r\n                })\r\n                \r\n                animations.push({\r\n                    x:adj[s][i].edgeNo,\r\n                    y:-1,\r\n                    color:'shrinkEdge'\r\n                })\r\n                animations.push({\r\n                    x:adj[s][i].vertex,\r\n                    y:-1,\r\n                    color:'blue'\r\n                })\r\n                this.dfsutil(adj[s][i].vertex,vis,animations)\r\n            }\r\n        }\r\n    }\r\n\r\n    dfsAnimations(s){\r\n        var animations=[]\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            vis[i]=false\r\n        }\r\n        this.dfsutil(s,vis,animations)\r\n        return animations\r\n    }\r\n\r\n    dfs(s){\r\n        if(s>=this.state.points.length)\r\n        return;\r\n        const animations=this.dfsAnimations(s)\r\n        this.reset()\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.stroke='blue'\r\n                    x1.style.strokeWidth='5'\r\n                    x1.style.borderRadius='2'\r\n                }, i*delay);\r\n            }\r\n            else if(animations[i].color==='shrinkEdge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.strokeWidth='2'\r\n                    x1.style.borderRadius='0'\r\n                }, i*delay);\r\n            }\r\n            else\r\n            {\r\n                    let x=document.getElementById(`point${animations[i].x}`)\r\n                    setTimeout(() => {\r\n                        x.style.fill=animations[i].color\r\n                    }, i*delay);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle key={\"point\"+idx} id={\"point\"+idx} cx={x.x} cy={x.y} r=\"14\" stroke=\"black\" onClick={(event)=>this.drawLine(event,idx)} strokeWidth=\"1.5\" style={{fill:\"#000\",transition:'all .2s linear',cursor:'pointer'}} />\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((pt,idx)=>{\r\n            return(\r\n                <text  key={\"index\"+idx} id={\"index\"+idx} fontSize=\"14\" fontFamily=\"Arial\" x={pt.x-4} y={pt.y+4} onClick={(event)=>this.drawLine(event,idx)} style={{fill:\"#fff\",transition:'all .2s linear',cursor:'pointer'}}>{idx}</text>\r\n            )\r\n        })\r\n        var lines=this.state.edges.map((q,idx)=>{\r\n            return(\r\n                <line key={\"edge\"+idx} id={\"edge\"+idx} x1={this.state.points[q.u].x} y1={this.state.points[q.u].y} x2={this.state.points[q.v].x} y2={this.state.points[q.v].y} style={{stroke:'red',strokeWidth:'2',transition:'all .2s linear'}} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n            <center>\r\n            <h3>Breadth First and Depth First Algorithm</h3>\r\n            <button className=\"button button4\" onClick={()=>this.bfs(this.state.src)}>BFS</button>\r\n            <button className=\"button button4\" onClick={()=>this.dfs(this.state.src)}>DFS</button>\r\n            <button className=\"button button4\" onClick={()=>this.reset()}>Reset</button>\r\n            <button className=\"button button4\" onClick={()=>this.clear()}>Clear Canvas</button>\r\n            <label style={{fontFamily:'Georgia'}}>&nbsp;&nbsp;&nbsp;Source/starting vertex &nbsp;</label>\r\n            <input type=\"text\" style={{width:'25px'}} id=\"src\" value={this.state.src} onChange={(e)=>this.changeSrc(e)} />\r\n            </center>\r\n            <center>\r\n            <svg paintOrder='markers' ref='svg' width={window.innerWidth*.995} height={window.innerHeight*0.88} style={{border:'2px solid black',backgroundColor:'#dddddd',cursor:'crosshair'}} onClick={(event)=>this.getMousePosition(event)}>\r\n            <rect>\r\n            <title>\r\n            1.Click to plot some points.&#13;2.Connect two points by clicking on them consecutively.&#13;3.Run the algo and Enjoy!!!\r\n            </title>\r\n            </rect>\r\n            {lines}\r\n            {pts}\r\n            {ptsidx}\r\n            \r\n            </svg>\r\n            </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Canvas\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","import React, { Component } from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport './graph.css'\r\n\r\nexport class HomeComp extends Component {\r\n    render() {\r\n        return (\r\n            <center>\r\n            <div>\r\n            <br/>\r\n                <h1 className=\"heading\" style={{color:'darkblue'}}>\r\n                    GRAPH ALGORITHM VISUALISER\r\n                </h1>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    \r\n                    <div className=\"col-sm-12 col-md-3\">\r\n                    <center>\r\n                    <div className=\"card box\" style={{width: '100%',backgroundColor:'#fafafa'}}>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\" style={{fontFamily:'Georgia'}}><br/>Breadth First and Depth First Algorithms</h3>\r\n                        <p style={{fontFamily: 'Georgia'}} className=\"card-text\">A simple simulation of Breadth First Traversal and Depth First traversal on an undirected graph created by the user.</p>\r\n                        <center>\r\n                        <NavLink to='/bfsdfs' style={{width:'70%',color:'white',fontFamily:'Georgia'}} className=\"button button4\">BFS and DFS</NavLink>\r\n                        </center>\r\n                    </div>\r\n                    </div>\r\n                    </center>\r\n                    </div>\r\n    \r\n                    <div className=\"col-sm-12 col-md-3\">\r\n                    <center>\r\n                    <div className=\"card box\" style={{width: '100%',backgroundColor:'#fafafa'}}>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\" style={{fontFamily:'Georgia'}}><br/>Dijkstra's Shortest Path Algorithm</h3>\r\n                        <p style={{fontFamily: 'Georgia'}} className=\"card-text\">A simulation of Djikstra's Shortest Path Algorithm and finding the shortest paths from the chosen source vertex to all the nodes.</p>\r\n                        <center>\r\n                        <NavLink to='/dijkstra' style={{width:'70%',color:'white',fontFamily:'Georgia'}} className=\"button button4\">Dijkstra's Algorithm</NavLink>\r\n                        </center>\r\n                    </div>\r\n                    </div>\r\n                    </center>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-12 col-md-3\">\r\n                    <center>\r\n                    <div className=\"card box\" style={{width: '100%',backgroundColor:'#fafafa'}}>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\" style={{fontFamily:'Georgia'}}><br/>Kruskal's Minimal Spanning Tree</h3>\r\n                        <p style={{fontFamily: 'Georgia'}} className=\"card-text\">A simple simulation Kruskal's Algorithm for finding the Minimal Spanning Tree of a connected undirected weighted graph.</p>\r\n                        <center>\r\n                        <NavLink to='/KruskalMST' style={{width:'70%',color:'white',fontFamily:'Georgia'}} className=\"button button4\">Kruskal's MST</NavLink>\r\n                        </center>\r\n                    </div>\r\n                    </div>\r\n                    </center>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-12 col-md-3\">\r\n                    <center>\r\n                    <div className=\"card box\" style={{width: '100%',backgroundColor:'#fafafa'}}>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\" style={{fontFamily:'Georgia'}}><br/>Prim's Minimal Spanning Tree Algorithm</h3>\r\n                        <p style={{fontFamily: 'Georgia'}} className=\"card-text\">A simple simulation Prim's Algorithm for finding the Minimal Spanning Tree of a connected undirected weighted graph.</p>\r\n                        <center>\r\n                        <NavLink to='/PrimMST' style={{width:'70%',color:'white',fontFamily:'Georgia'}} className=\"button button4\">Prim's MST</NavLink>\r\n                        </center>\r\n                    </div>\r\n                    </div>\r\n                    </center>\r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                <br/><br/>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-12\" style={{backgroundColor:'#fafafa',border:'.5px solid #d6d6d6',borderRadius:'4px',padding:'10px 10px 0px 10px'}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-8 box\" >\r\n                        <p style={{fontFamily:'Georgia'}}> The application is aimed to help the users better understand the famous algorithms on graph by visualizing the steps and realizing how the algorithm actually works. The graph is user generated and the edge weights of weighted graphs are randomly generated and can be changed by the click of a button.</p>\r\n                        <p>This aplication is created by Pratim Sarkar. <b>CodeChef</b>: pratims10(5 star:2157), <b>Codeforces</b>: pratims10(Expert:1733)</p>\r\n                        <p>For any query/sugesstion/feedback, mail at: <b>pratimsarkar23@gmail.com</b></p>\r\n                    </div>\r\n                    <div className=\"col-2\"></div>\r\n                </div>\r\n                </div></div>\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeComp\r\n","import React, { Component } from 'react'\r\nimport './graph.css'\r\nlet v1=null,v2=null\r\nlet adj=[]\r\nvar delay=500\r\nlet weights=[]\r\nvar r=14\r\nvar INT_MAX=100000\r\nlet parent=[]\r\nlet color1='rgb(0, 204, 0)';\r\nlet done=false\r\nlet timeouts=[]\r\nexport class MST extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[],\r\n             edges:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n//        this.generateRandomGraph()\r\n    }\r\n    randomWeights(){\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        weights[i]=getRandomInt(1,50);\r\n        this.reset()\r\n        this.forceUpdate();\r\n    }\r\n    addWeights()\r\n    {\r\n        weights.push(getRandomInt(1,50))\r\n        this.forceUpdate()\r\n    }\r\n    getMousePosition(event)\r\n    {\r\n        this.reset()\r\n        done=false\r\n        let x = event.clientX-this.refs.svg.getBoundingClientRect().left\r\n        let y = event.clientY-this.refs.svg.getBoundingClientRect().top\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            let x1=this.state.points[i].x;\r\n            let y1=this.state.points[i].y;\r\n            let dist=(x-x1)*(x-x1)+(y-y1)*(y-y1);\r\n            if(dist<=1000)\r\n                return false;\r\n        }\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({x:x,y:y})\r\n        },function(){\r\n            adj.push([])\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    drawLine(idx){\r\n        this.reset()\r\n        done=false\r\n        let u=document.getElementById(`point${idx}`);\r\n        u.style.fill='red';\r\n        if(v1===null)\r\n        v1=idx;\r\n        else {\r\n            v2=idx;\r\n            u=document.getElementById(`point${v1}`)\r\n            u.style.fill='#000'\r\n            u=document.getElementById(`point${v2}`)\r\n            u.style.fill='#000'\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(this.state.edges[i].u===v1 && this.state.edges[i].v===v2)\r\n                {   v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n                else if(this.state.edges[i].u===v2 && this.state.edges[i].v===v1)\r\n                {\r\n                    v1=null\r\n                    v2=null\r\n                    return\r\n                }\r\n            }\r\n            if(v1===v2)\r\n            {\r\n                v1=null\r\n                v2=null\r\n                return\r\n            }\r\n            this.setState((prev)=>{\r\n                edges:prev.edges.push({\r\n                    u:v1,\r\n                    v:v2\r\n                })\r\n            },function(){\r\n                this.addWeights()\r\n                adj[v1].push({vertex:v2,edgeNo:this.state.edges.length-1})\r\n                adj[v2].push({vertex:v1,edgeNo:this.state.edges.length-1})\r\n                v1=null\r\n                v2=null\r\n            })\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        done=false\r\n        for(let i=0;i<this.state.points.length;i++){\r\n            if(document.getElementById(`point${i}`).style.fill!=='red')\r\n            document.getElementById(`point${i}`).style.fill='#000'\r\n        }\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            document.getElementById(`edge${i}`).style.stroke='red'\r\n            document.getElementById(`weight${i}`).style.fill='black'\r\n        }\r\n        parent=[]\r\n        this.forceUpdate();\r\n    }\r\n    clear(){\r\n        done=false\r\n        this.setState({\r\n            points:[],\r\n            edges:[]\r\n        },function(){\r\n            v1=null\r\n            v2=null\r\n            adj=[]\r\n            weights=[]\r\n            parent=[]\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //KRUSKAL'S MST\r\n    root(ar,x){\r\n        let j=x\r\n        while(ar[x]!=x)\r\n        {\r\n            x=ar[x]\r\n        }\r\n        ar[j]=x\r\n        return x\r\n    }\r\n    join(ar,size,a,b){\r\n        let ra=this.root(ar,a)\r\n        let rb=this.root(ar,b)\r\n        if(ra==rb) return\r\n        if(size[ra]<size[rb]){\r\n            size[rb]+=size[ra]\r\n            ar[ra]=rb\r\n        }\r\n        else{\r\n            size[ra]+=size[rb]\r\n            ar[rb]=ra\r\n        }\r\n    }\r\n    kruskalAnimations(){\r\n        this.reset()\r\n        let ar=[]\r\n        //forming triplets\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            ar.push({\r\n                u:this.state.edges[i].u,\r\n                v:this.state.edges[i].v,\r\n                edge:{\r\n                    wt:weights[i],\r\n                    number:i\r\n                }\r\n            })\r\n        }\r\n        ar.sort(function(a,b){\r\n            return a.edge.wt-b.edge.wt\r\n        })\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        vis[i]=false;\r\n        let animations=[]\r\n        let arr=[]\r\n        let size=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            arr[i]=i\r\n            size[i]=1\r\n        }\r\n        for(let it=0;it<ar.length;it++)\r\n        {\r\n            animations.push({\r\n                edge:ar[it].edge.number,\r\n                x:-1,\r\n                y:-1,\r\n                color:'test'\r\n            })\r\n            if(this.root(arr,ar[it].u)===this.root(arr,ar[it].v)){\r\n                animations.push({\r\n                    edge:ar[it].edge.number,\r\n                    x:-1,\r\n                    y:-1,\r\n                    color:'excluded'\r\n                })\r\n                continue\r\n            }\r\n            this.join(arr,size,ar[it].u,ar[it].v)\r\n            animations.push({\r\n                edge:ar[it].edge.number,\r\n                x:ar[it].u,\r\n                y:ar[it].v,\r\n                color:'included'\r\n            })\r\n        }\r\n        let rt=arr[0]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        if(rt!==arr[i]) return []\r\n        return animations\r\n    }\r\n\r\n    kruskal(){\r\n        this.reset()\r\n        if(this.state.points.length===0) return\r\n        if(this.state.points.length===1)\r\n        {\r\n            document.getElementById(`point${0}`).style.fill=color1\r\n            return\r\n        }\r\n        const animations=this.kruskalAnimations()\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='test'){\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].edge}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='5'\r\n                    }, i*delay)\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='excluded')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].edge}`)\r\n                    q.style.stroke='#bfbfbf'\r\n                    q.style.strokeWidth='2'\r\n                    document.getElementById(`weight${animations[i].edge}`).style.fill='#bfbfbf'\r\n                }, i*delay)\r\n                timeouts.push(tm)\r\n            }\r\n            else\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].edge}`)\r\n                    q.style.stroke=color1\r\n                    q.style.strokeWidth='2'\r\n                    document.getElementById(`point${animations[i].x}`).style.fill=color1\r\n                    document.getElementById(`point${animations[i].y}`).style.fill=color1\r\n                }, i*delay)\r\n                timeouts.push(tm)\r\n            }\r\n        }\r\n        done=true\r\n    }\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle key={\"point\"+idx} id={\"point\"+idx} cx={x.x} cy={x.y} r={r} stroke=\"black\" onClick={(event)=>this.drawLine(idx)} strokeWidth=\"1.5\" style={{fill:\"#000\",transition:'all .2s linear',cursor:'pointer'}}/>\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((pt,idx)=>{\r\n            return(\r\n                <text key={\"index\"+idx} id={\"index\"+idx} fontSize=\"14\" fontFamily=\"Arial\" x={pt.x-4} y={pt.y+4} onClick={(event)=>this.drawLine(idx)} style={{fill:\"#fff\",transition:'all .2s linear',cursor:'pointer'}} >{idx}</text>\r\n            )\r\n        })\r\n        var lines=this.state.edges.map((q,idx)=>{\r\n            return(\r\n                <line key={\"edge\"+idx} id={\"edge\"+idx} x1={this.state.points[q.u].x} y1={this.state.points[q.u].y} x2={this.state.points[q.v].x} y2={this.state.points[q.v].y} style={{stroke:'red',strokeWidth:'2',zIndex:'-1',transition:'all .2s linear'}} />\r\n            )\r\n        })\r\n        var edgeWeights=this.state.edges.map((edge,idx)=>{\r\n            return(\r\n                <text key={\"weight\"+idx} id={\"weight\"+idx} fontSize=\"14\" fontFamily=\"Arial\" fill=\"#000\" x={(this.state.points[edge.u].x+this.state.points[edge.v].x)/2.0} y={(this.state.points[edge.u].y+this.state.points[edge.v].y)/2.0} >{weights[idx]}</text>\r\n            )\r\n        })\r\n        \r\n        return (\r\n        <div>\r\n            <center>\r\n            <h3>Kruskal's Minimal Spanning Tree Algoriithm</h3>\r\n            <button className=\"button button4\" onClick={()=>this.kruskal()}>Kruskal's Algorithm</button>\r\n            <button className=\"button button4\" onClick={()=>this.randomWeights()}>Randomize edge weights</button>\r\n            <button className=\"button button4\" onClick={()=>this.reset()}>Reset</button>\r\n            <button className=\"button button4\" onClick={()=>this.clear()}>Clear Canvas</button>\r\n            </center>\r\n            <center>\r\n            <svg paintOrder='markers' ref='svg' width={window.innerWidth*.995} height={window.innerHeight*.88} style={{border:'2px solid black',backgroundColor:'#dddddd',cursor:'crosshair'}} onClick={(event)=>this.getMousePosition(event)}>\r\n            <rect>\r\n            <title>\r\n            1.Click to plot some points.&#13;2.Connect two points by clicking on them consecutively.&#13;3.Run the algo and Enjoy!!!\r\n            </title>\r\n            </rect>\r\n            {edgeWeights}\r\n            {lines}\r\n            {pts}\r\n            {ptsidx}\r\n            </svg>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MST\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}","import React, { Component } from 'react'\r\nimport ShortestPath from './ShortestPath'\r\nimport Canvas from './canvas'\r\nimport HomeComp from './HomeComp'\r\nimport MST from './MST'\r\nimport {NavLink, Switch, Route,Redirect} from 'react-router-dom'\r\n\r\nexport class MainComponent extends Component {\r\n    render() {\r\n        return (\r\n                <Switch>\r\n                    <Route path='/home' component={HomeComp}/>\r\n                    <Route path='/bfsdfs' component={Canvas}/>\r\n                    <Route path='/dijkstra' component={ShortestPath}/>\r\n                    <Route path='/PrimMST' component={ShortestPath}/>\r\n                    <Route path='/KruskalMST' component={MST}/>\r\n                    <Redirect to='/home' />\r\n                </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainComponent\r\n","import React from 'react';\nimport './App.css';\nimport MainComponent from './components/MainComponent';\nimport {HashRouter} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <HashRouter>\n    <div>\n    <MainComponent/>\n    </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}