{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\Graph\\\\graph-algorithm-visualizer\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n/*$(\"html\").on(\"click\", \".btn\", function(evt) {\n    var btn = $(evt.currentTarget);\n    var x = evt.pageX - btn.offset().left;\n    var y = evt.pageY - btn.offset().top;\n    \n    var duration = 500;\n    var animationFrame, animationStart;\n    \n    var animationStep = function(timestamp) {\n      if (!animationStart) {\n        animationStart = timestamp;\n      }\n     \n      var frame = timestamp - animationStart;\n      if (frame < duration) {\n        var easing = (frame/duration) * (2 - (frame/duration));\n        \n        var circle = \"circle at \" + x + \"px \" + y + \"px\";\n        var color = \"rgba(0, 0, 0, \" + (0.3 * (1 - easing)) + \")\";\n        var stop = 90 * easing + \"%\";\n  \n        btn.css({\n          \"background-image\": \"radial-gradient(\" + circle + \", \" + color + \" \" + stop + \", transparent \" + stop + \")\"\n        });\n  \n        animationFrame = window.requestAnimationFrame(animationStep);\n      } else {\n        $(btn).css({\n          \"background-image\": \"none\"\n        });\n        window.cancelAnimationFrame(animationFrame);\n      }\n      \n    };\n    \n    animationFrame = window.requestAnimationFrame(animationStep);\n  \n  });*/","map":{"version":3,"sources":["H:/React/Graph/graph-algorithm-visualizer/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAH,aAAa,CAACI,UAAd;AAGA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n/*$(\"html\").on(\"click\", \".btn\", function(evt) {\n    var btn = $(evt.currentTarget);\n    var x = evt.pageX - btn.offset().left;\n    var y = evt.pageY - btn.offset().top;\n    \n    var duration = 500;\n    var animationFrame, animationStart;\n    \n    var animationStep = function(timestamp) {\n      if (!animationStart) {\n        animationStart = timestamp;\n      }\n     \n      var frame = timestamp - animationStart;\n      if (frame < duration) {\n        var easing = (frame/duration) * (2 - (frame/duration));\n        \n        var circle = \"circle at \" + x + \"px \" + y + \"px\";\n        var color = \"rgba(0, 0, 0, \" + (0.3 * (1 - easing)) + \")\";\n        var stop = 90 * easing + \"%\";\n  \n        btn.css({\n          \"background-image\": \"radial-gradient(\" + circle + \", \" + color + \" \" + stop + \", transparent \" + stop + \")\"\n        });\n  \n        animationFrame = window.requestAnimationFrame(animationStep);\n      } else {\n        $(btn).css({\n          \"background-image\": \"none\"\n        });\n        window.cancelAnimationFrame(animationFrame);\n      }\n      \n    };\n    \n    animationFrame = window.requestAnimationFrame(animationStep);\n  \n  });*/"]},"metadata":{},"sourceType":"module"}