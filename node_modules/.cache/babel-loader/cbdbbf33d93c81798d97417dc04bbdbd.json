{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\Graph\\\\graph-algorithm-visualizer\\\\src\\\\components\\\\canvas.js\";\nimport React, { Component } from 'react';\nexport class Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: []\n    };\n  }\n\n  getMousePosition(event) {\n    let x = event.clientX; //this.refs.svg.style.marginLeft ;\n\n    let y = event.clientY - this.refs.svg.style.marginTop;\n    this.setState(prev => {\n      points: prev.points.push({\n        x: x,\n        y: y\n      });\n    });\n    this.forceUpdate();\n  }\n\n  render() {\n    var pts = this.state.points.map((x, idx) => {\n      return React.createElement(\"circle\", {\n        cx: x.x,\n        cy: x.y,\n        r: \"10\",\n        stroke: \"black\",\n        \"stroke-width\": \"1\",\n        fill: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    });\n    var ptsidx = this.state.points.map((x, idx) => {\n      return React.createElement(\"text\", {\n        fill: \"#fff\",\n        \"font-size\": \"10\",\n        \"font-family\": \"Arial\",\n        x: x.x - 4,\n        y: x.y + 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, idx);\n    });\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: '200'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      ref: \"svg\",\n      className: \"svgStyles\",\n      marginTop: \"300\",\n      width: \"600\",\n      height: \"500\",\n      style: {\n        backgroundColor: 'rgb(215, 201, 248)',\n        Top: '100'\n      },\n      onClick: event => this.getMousePosition(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, pts, ptsidx));\n  }\n\n}\nexport default Canvas;","map":{"version":3,"sources":["H:/React/Graph/graph-algorithm-visualizer/src/components/canvas.js"],"names":["React","Component","Canvas","constructor","props","state","points","getMousePosition","event","x","clientX","y","clientY","refs","svg","style","marginTop","setState","prev","push","forceUpdate","render","pts","map","idx","ptsidx","backgroundColor","Top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACRC,MAAAA,MAAM,EAAC;AADC,KAAb;AAGH;;AAEDC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,QAAIC,CAAC,GAAGD,KAAK,CAACE,OAAd,CADoB,CACE;;AACtB,QAAIC,CAAC,GAAGH,KAAK,CAACI,OAAN,GAAc,KAAKC,IAAL,CAAUC,GAAV,CAAcC,KAAd,CAAoBC,SAA1C;AACA,SAAKC,QAAL,CAAeC,IAAD,IAAQ;AAClBZ,MAAAA,MAAM,EAACY,IAAI,CAACZ,MAAL,CAAYa,IAAZ,CAAiB;AACpBV,QAAAA,CAAC,EAACA,CADkB;AAEpBE,QAAAA,CAAC,EAACA;AAFkB,OAAjB;AAIV,KALD;AAMA,SAAKS,WAAL;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAC,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsB,CAACd,CAAD,EAAGe,GAAH,KAAS;AACnC,aACA;AAAQ,QAAA,EAAE,EAAEf,CAAC,CAACA,CAAd;AAAiB,QAAA,EAAE,EAAEA,CAAC,CAACE,CAAvB;AAA0B,QAAA,CAAC,EAAC,IAA5B;AAAiC,QAAA,MAAM,EAAC,OAAxC;AAAgD,wBAAa,GAA7D;AAAiE,QAAA,IAAI,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAGH,KAJO,CAAR;AAKA,QAAIc,MAAM,GAAC,KAAKpB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsB,CAACd,CAAD,EAAGe,GAAH,KAAS;AACtC,aACI;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,qBAAU,IAA5B;AAAiC,uBAAY,OAA7C;AAAqD,QAAA,CAAC,EAAEf,CAAC,CAACA,CAAF,GAAI,CAA5D;AAA+D,QAAA,CAAC,EAAEA,CAAC,CAACE,CAAF,GAAI,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0Ea,GAA1E,CADJ;AAGH,KAJU,CAAX;AAKA,WACI;AAAK,MAAA,KAAK,EAAE;AAACR,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAC,KAAT;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAqC,MAAA,SAAS,EAAC,KAA/C;AAAqD,MAAA,KAAK,EAAC,KAA3D;AAAiE,MAAA,MAAM,EAAC,KAAxE;AAA8E,MAAA,KAAK,EAAE;AAACU,QAAAA,eAAe,EAAE,oBAAlB;AAAuCC,QAAAA,GAAG,EAAC;AAA3C,OAArF;AAAwI,MAAA,OAAO,EAAGnB,KAAD,IAAS,KAAKD,gBAAL,CAAsBC,KAAtB,CAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCc,GADD,EAECG,MAFD,CADA,CADJ;AAQH;;AAvCiC;AA0CtC,eAAevB,MAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Canvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[]\r\n        }\r\n    }\r\n    \r\n    getMousePosition(event) { \r\n        let x = event.clientX;//this.refs.svg.style.marginLeft ;\r\n        let y = event.clientY-this.refs.svg.style.marginTop ;\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({\r\n                x:x,\r\n                y:y\r\n            })\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle cx={x.x} cy={x.y} r=\"10\" stroke=\"black\" stroke-width=\"1\" fill=\"green\" />\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((x,idx)=>{\r\n            return(\r\n                <text fill=\"#fff\" font-size=\"10\" font-family=\"Arial\" x={x.x-4} y={x.y+4}>{idx}</text>\r\n            )\r\n        })\r\n        return (\r\n            <div style={{marginTop:'200'}}>\r\n            <svg ref='svg' className=\"svgStyles\" marginTop=\"300\" width=\"600\" height=\"500\" style={{backgroundColor: 'rgb(215, 201, 248)',Top:'100'}} onClick={(event)=>this.getMousePosition(event)}>\r\n            {pts}\r\n            {ptsidx}\r\n            </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Canvas\r\n"]},"metadata":{},"sourceType":"module"}