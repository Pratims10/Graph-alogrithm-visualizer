{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\Graph\\\\graph-algorithm-visualizer\\\\src\\\\components\\\\ShortestPath.js\";\nimport React, { Component } from 'react';\nimport './graph.css';\nlet v1 = null,\n    v2 = null;\nlet adj = [];\nvar delay = 250;\nlet weights = [];\nvar r = 14;\nvar INT_MAX = 100000;\nlet parent = [];\nlet color1 = 'rgb(0, 204, 0)';\nlet done = false;\nlet timeouts = [];\nexport class ShortestPath extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: [],\n      edges: [],\n      src: 0\n    };\n  }\n\n  componentDidMount() {//        this.generateRandomGraph()\n  }\n\n  randomWeights() {\n    for (let i = 0; i < this.state.edges.length; i++) weights[i] = getRandomInt(1, 50);\n\n    this.reset();\n    this.forceUpdate();\n  }\n\n  addWeights() {\n    weights.push(getRandomInt(1, 50));\n    this.forceUpdate();\n  }\n\n  getMousePosition(event) {\n    this.reset();\n    done = false;\n    let x = event.clientX - this.refs.svg.getBoundingClientRect().left;\n    let y = event.clientY - this.refs.svg.getBoundingClientRect().top;\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      let x1 = this.state.points[i].x;\n      let y1 = this.state.points[i].y;\n      let dist = (x - x1) * (x - x1) + (y - y1) * (y - y1);\n      if (dist <= 1000) return false;\n    }\n\n    this.setState(prev => {\n      points: prev.points.push({\n        x: x,\n        y: y\n      });\n    }, function () {\n      adj.push([]);\n    });\n    this.forceUpdate();\n  }\n\n  changeSrc(e) {\n    this.reset();\n    done = false;\n    let x = document.getElementById('src').value;\n    this.setState({\n      src: x\n    });\n  }\n\n  drawLine(idx) {\n    this.reset();\n    done = false;\n    let u = document.getElementById(`point${idx}`);\n    u.style.fill = 'red';\n    if (v1 === null) v1 = idx;else {\n      v2 = idx;\n      u = document.getElementById(`point${v1}`);\n      u.style.fill = 'orange';\n      u = document.getElementById(`point${v2}`);\n      u.style.fill = 'orange';\n\n      for (let i = 0; i < this.state.edges.length; i++) {\n        if (this.state.edges[i].u === v1 && this.state.edges[i].v === v2) {\n          v1 = null;\n          v2 = null;\n          return;\n        } else if (this.state.edges[i].u === v2 && this.state.edges[i].v === v1) {\n          v1 = null;\n          v2 = null;\n          return;\n        }\n      }\n\n      if (v1 === v2) {\n        v1 = null;\n        v2 = null;\n        return;\n      }\n\n      this.setState(prev => {\n        edges: prev.edges.push({\n          u: v1,\n          v: v2\n        });\n      }, function () {\n        this.addWeights();\n        adj[v1].push({\n          vertex: v2,\n          edgeNo: this.state.edges.length - 1\n        });\n        adj[v2].push({\n          vertex: v1,\n          edgeNo: this.state.edges.length - 1\n        });\n        v1 = null;\n        v2 = null;\n      });\n      this.forceUpdate();\n    }\n  }\n\n  reset() {\n    done = false;\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      if (document.getElementById(`point${i}`).style.fill !== 'red') document.getElementById(`point${i}`).style.fill = 'orange';\n    }\n\n    for (let i = 0; i < this.state.edges.length; i++) {\n      document.getElementById(`edge${i}`).style.stroke = 'red';\n    }\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      document.getElementById(`dist${i}`).textContent = 'âˆž';\n    }\n\n    parent = [];\n    this.forceUpdate();\n  }\n\n  clear() {\n    done = false;\n    this.setState({\n      points: [],\n      edges: [],\n      dist: []\n    }, function () {\n      v1 = null;\n      v2 = null;\n      adj = [];\n      weights = [];\n      parent = [];\n    });\n    this.forceUpdate();\n  } //GENERATE RANDOM GRAPH\n\n\n  generateRandomGraph() {\n    let lx = this.refs.svg.getBoundingClientRect().left + 15;\n    let rx = this.refs.svg.getBoundingClientRect().left + this.refs.svg.clientWidth - 15;\n    let ly = this.refs.svg.getBoundingClientRect().top + 15;\n    let ry = this.refs.svg.getBoundingClientRect().top + this.refs.svg.clientHeight - 15;\n    let n = getRandomInt(5, 12);\n    let i;\n\n    for (i = 1; i <= n; i++) {\n      let flag;\n      setTimeout(() => {\n        flag = this.getMousePosition({\n          clientX: getRandomInt(lx, rx),\n          clientY: getRandomInt(ly, ry)\n        });\n      }, i * delay);\n      if (flag === false) i--;\n    }\n\n    for (let j = 1; j <= 1.1 * n; j++) {\n      setTimeout(() => {\n        let aq = getRandomInt(0, n - 1);\n        this.drawLine(aq);\n        aq = getRandomInt(0, n - 1);\n        this.drawLine(\" \" + aq);\n      }, i * delay);\n      i++;\n    }\n  }\n\n  showPath(s) {\n    if (done === false) return;\n    let i = parent[s];\n    document.getElementById(`point${s}`).style.fill = 'yellow';\n    if (typeof i === \"undefined\") return;\n\n    while (i.vertex !== -1) {\n      document.getElementById(`edge${i.edgeNo}`).style.stroke = 'yellow';\n      document.getElementById(`point${i.vertex}`).style.fill = 'yellow';\n      i = parent[i.vertex];\n    }\n  }\n\n  removePath(s) {\n    if (done === false) return;\n    let i = parent[s];\n    document.getElementById(`point${s}`).style.fill = color1;\n    if (typeof i === \"undefined\") return;\n\n    while (i.vertex !== -1) {\n      document.getElementById(`edge${i.edgeNo}`).style.stroke = 'blue';\n      document.getElementById(`point${i.vertex}`).style.fill = color1;\n      i = parent[i.vertex];\n    }\n  } //DJIKSTRA'S SHORTEST PATH ALGORITHM\n\n\n  minDist(dist, sptSet) {\n    // Initialize min value \n    let min = INT_MAX,\n        min_index;\n\n    for (let v = 0; v < this.state.points.length; v++) if (sptSet[v] === false && dist[v] <= min) {\n      min = dist[v];\n      min_index = v;\n    }\n\n    return min_index;\n  }\n\n  dijkstraAnimations(s) {\n    this.reset();\n    let ar = [];\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      ar.push([]);\n\n      for (let j = 0; j < this.state.points.length; j++) ar[i].push(0);\n    } //forming adj matrix\n\n\n    for (let i = 0; i < this.state.edges.length; i++) {\n      ar[this.state.edges[i].u][this.state.edges[i].v] = {\n        wt: weights[i],\n        edgeNo: i\n      };\n      ar[this.state.edges[i].v][this.state.edges[i].u] = {\n        wt: weights[i],\n        edgeNo: i\n      };\n    }\n\n    let vis = [];\n\n    for (let i = 0; i < this.state.points.length; i++) vis[i] = false;\n\n    let animations = [];\n    let dist = [];\n    parent = [];\n\n    for (let i = 0; i < this.state.points.length; i++) dist[i] = 100000;\n\n    dist[s] = 0;\n    parent[s] = {\n      vertex: -1,\n      edgeNo: -1\n    };\n    animations.push({\n      x: s,\n      y: 0,\n      color: 'setdist'\n    });\n\n    for (let it = 0; it < this.state.points.length; it++) {\n      let u = this.minDist(dist, vis);\n      if (dist[u] === INT_MAX) return animations;\n      vis[u] = true;\n      animations.push({\n        x: u,\n        y: -1,\n        color: 'confirmdist'\n      });\n\n      for (let v = 0; v < this.state.points.length; v++) {\n        if (!vis[v] && ar[u][v].wt && dist[u] + ar[u][v].wt < dist[v]) {\n          parent[v] = {\n            vertex: u,\n            edgeNo: ar[u][v].edgeNo\n          };\n          dist[v] = dist[u] + ar[u][v].wt;\n          animations.push({\n            x: ar[u][v].edgeNo,\n            y: -1,\n            color: 'edge'\n          });\n          animations.push({\n            x: v,\n            y: dist[v],\n            color: 'setdist'\n          });\n        }\n      }\n    }\n\n    return animations;\n  }\n\n  dijkstra(s) {\n    if (s >= this.state.points.length) return;\n\n    if (s === \"\" && s !== '0') {\n      alert(\"Enter a source vertex\");\n      return;\n    }\n\n    for (let i = 0; i < s.length; i++) {\n      if (s[i] !== '0' && s[i] !== '1' && s[i] !== '2' && s[i] !== '3' && s[i] !== '4' && s[i] !== '5' && s[i] !== '6' && s[i] !== '7' && s[i] !== '8' && s[i] !== '9') {\n        alert(\"Enter an integer as source vertex\");\n        return;\n      }\n    }\n\n    const animations = this.dijkstraAnimations(s);\n    let len = animations.length;\n\n    for (let i = 0; i < len; i++) {\n      if (animations[i].color === 'edge') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`edge${animations[i].x}`);\n          q.style.stroke = 'blue';\n        }, i * delay);\n        timeouts.push(tm);\n      } else if (animations[i].color === 'setdist') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`point${animations[i].x}`);\n          q.style.fill = 'blue';\n          q = document.getElementById(`dist${animations[i].x}`);\n          q.textContent = animations[i].y;\n        }, i * delay);\n        timeouts.push(tm);\n      } else {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`point${animations[i].x}`);\n          q.style.fill = color1;\n        }, i * delay);\n        timeouts.push(tm);\n      }\n    }\n\n    done = true;\n  }\n\n  render() {\n    var pts = this.state.points.map((x, idx) => {\n      return React.createElement(\"circle\", {\n        key: \"point\" + idx,\n        id: \"point\" + idx,\n        cx: x.x,\n        cy: x.y,\n        r: r,\n        stroke: \"black\",\n        onClick: event => this.drawLine(idx),\n        strokeWidth: \"1.5\",\n        style: {\n          fill: \"orange\",\n          zIndex: '1',\n          transition: 'all .2s linear',\n          cursor: 'pointer'\n        },\n        onMouseOver: () => this.showPath(idx),\n        onMouseOut: () => this.removePath(idx),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      });\n    });\n    var ptsidx = this.state.points.map((pt, idx) => {\n      return React.createElement(\"text\", {\n        key: \"index\" + idx,\n        id: \"index\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        x: pt.x - 4,\n        y: pt.y + 4,\n        onClick: event => this.drawLine(idx),\n        style: {\n          zIndex: '1',\n          fill: \"#fff\",\n          transition: 'all .2s linear',\n          cursor: 'pointer'\n        },\n        onMouseOver: () => this.showPath(idx),\n        onMouseOut: () => this.removePath(idx),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, idx);\n    });\n    var lines = this.state.edges.map((q, idx) => {\n      return React.createElement(\"line\", {\n        key: \"edge\" + idx,\n        id: \"edge\" + idx,\n        x1: this.state.points[q.u].x,\n        y1: this.state.points[q.u].y,\n        x2: this.state.points[q.v].x,\n        y2: this.state.points[q.v].y,\n        style: {\n          stroke: 'red',\n          strokeWidth: '2',\n          zIndex: '-1',\n          transition: 'all .2s linear'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      });\n    });\n    var edgeWeights = this.state.edges.map((edge, idx) => {\n      return React.createElement(\"text\", {\n        key: \"weight\" + idx,\n        id: \"weight\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        fill: \"#000\",\n        x: (this.state.points[edge.u].x + this.state.points[edge.v].x) / 2.0,\n        y: (this.state.points[edge.u].y + this.state.points[edge.v].y) / 2.0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, weights[idx]);\n    });\n    var dists = this.state.points.map((x, idx) => {\n      return React.createElement(\"text\", {\n        key: \"dist\" + idx,\n        id: \"dist\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        fill: \"#000\",\n        x: x.x + r + 2,\n        y: x.y + r + 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"\\u221E\");\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.dijkstra(this.state.src),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Djikstra's Algorithm\"), React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.randomWeights(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Randomize edge weights\"), React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.reset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Clear Canvas\"), React.createElement(\"text\", {\n      style: {\n        fontFamily: 'Georgia'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0Enter source vertex: \\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"src\",\n      value: this.state.src,\n      onChange: e => this.changeSrc(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    })), React.createElement(\"svg\", {\n      paintOrder: \"markers\",\n      ref: \"svg\",\n      width: window.innerWidth,\n      height: window.innerHeight * .9,\n      style: {\n        border: '1px dotted black',\n        backgroundColor: 'rgb(251, 250, 255)',\n        cursor: 'crosshair'\n      },\n      onClick: event => this.getMousePosition(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, edgeWeights, lines, pts, ptsidx, dists));\n  }\n\n}\nexport default ShortestPath;\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["H:/React/Graph/graph-algorithm-visualizer/src/components/ShortestPath.js"],"names":["React","Component","v1","v2","adj","delay","weights","r","INT_MAX","parent","color1","done","timeouts","ShortestPath","constructor","props","state","points","edges","src","componentDidMount","randomWeights","i","length","getRandomInt","reset","forceUpdate","addWeights","push","getMousePosition","event","x","clientX","refs","svg","getBoundingClientRect","left","y","clientY","top","x1","y1","dist","setState","prev","changeSrc","e","document","getElementById","value","drawLine","idx","u","style","fill","v","vertex","edgeNo","stroke","textContent","clear","generateRandomGraph","lx","rx","clientWidth","ly","ry","clientHeight","n","flag","setTimeout","j","aq","showPath","s","removePath","minDist","sptSet","min","min_index","dijkstraAnimations","ar","wt","vis","animations","color","it","dijkstra","alert","len","tm","q","render","pts","map","zIndex","transition","cursor","ptsidx","pt","lines","strokeWidth","edgeWeights","edge","dists","fontFamily","window","innerWidth","innerHeight","border","backgroundColor","max","Math","ceil","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './graph.css'\r\n\r\nlet v1=null,v2=null\r\nlet adj=[]\r\nvar delay=250\r\nlet weights=[]\r\nvar r=14\r\nvar INT_MAX=100000\r\nlet parent=[]\r\nlet color1='rgb(0, 204, 0)';\r\nlet done=false\r\nlet timeouts=[]\r\nexport class ShortestPath extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[],\r\n             edges:[],\r\n             src:0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n//        this.generateRandomGraph()\r\n    }\r\n    randomWeights(){\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        weights[i]=getRandomInt(1,50);\r\n        this.reset()\r\n        this.forceUpdate();\r\n    }\r\n    addWeights()\r\n    {\r\n        weights.push(getRandomInt(1,50))\r\n        this.forceUpdate()\r\n    }\r\n    getMousePosition(event)\r\n    {\r\n        this.reset()\r\n        done=false\r\n        let x = event.clientX-this.refs.svg.getBoundingClientRect().left ;\r\n        let y = event.clientY-this.refs.svg.getBoundingClientRect().top;\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            let x1=this.state.points[i].x;\r\n            let y1=this.state.points[i].y;\r\n            let dist=(x-x1)*(x-x1)+(y-y1)*(y-y1);\r\n            if(dist<=1000)\r\n                return false;\r\n        }\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({x:x,y:y})\r\n        },function(){\r\n            adj.push([])\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeSrc(e){\r\n        this.reset()\r\n        done=false\r\n        let x=document.getElementById('src').value\r\n        this.setState({\r\n            src:x\r\n        })\r\n    }\r\n\r\n    drawLine(idx){\r\n        this.reset()\r\n        done=false\r\n        let u=document.getElementById(`point${idx}`);\r\n        u.style.fill='red';\r\n        if(v1===null)\r\n        v1=idx;\r\n        else {\r\n            v2=idx;\r\n            u=document.getElementById(`point${v1}`);\r\n            u.style.fill='orange';\r\n            u=document.getElementById(`point${v2}`);\r\n            u.style.fill='orange';\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(this.state.edges[i].u===v1 && this.state.edges[i].v===v2)\r\n                {   v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n                else if(this.state.edges[i].u===v2 && this.state.edges[i].v===v1)\r\n                {\r\n                    v1=null\r\n                    v2=null\r\n                    return\r\n                }\r\n            }\r\n            if(v1===v2)\r\n            {\r\n                v1=null\r\n                v2=null\r\n                return\r\n            }\r\n            this.setState((prev)=>{\r\n                edges:prev.edges.push({\r\n                    u:v1,\r\n                    v:v2\r\n                })\r\n            },function(){\r\n                this.addWeights()\r\n                adj[v1].push({vertex:v2,edgeNo:this.state.edges.length-1})\r\n                adj[v2].push({vertex:v1,edgeNo:this.state.edges.length-1})\r\n                v1=null\r\n                v2=null\r\n            })\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        done=false\r\n        for(let i=0;i<this.state.points.length;i++){\r\n            if(document.getElementById(`point${i}`).style.fill!=='red')\r\n            document.getElementById(`point${i}`).style.fill='orange'\r\n        }\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            document.getElementById(`edge${i}`).style.stroke='red'\r\n        }\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            document.getElementById(`dist${i}`).textContent='âˆž';\r\n        }\r\n        parent=[]\r\n        this.forceUpdate();\r\n    }\r\n    clear(){\r\n        done=false\r\n        this.setState({\r\n            points:[],\r\n            edges:[],\r\n            dist:[]\r\n        },function(){\r\n            v1=null\r\n            v2=null\r\n            adj=[]\r\n            weights=[]\r\n            parent=[]\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //GENERATE RANDOM GRAPH\r\n    generateRandomGraph(){\r\n        let lx=this.refs.svg.getBoundingClientRect().left+15\r\n        let rx=this.refs.svg.getBoundingClientRect().left+this.refs.svg.clientWidth-15;\r\n\r\n        let ly=this.refs.svg.getBoundingClientRect().top+15\r\n        let ry=this.refs.svg.getBoundingClientRect().top+this.refs.svg.clientHeight-15;\r\n        let n=getRandomInt(5,12)\r\n        let i;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            let flag;\r\n            setTimeout(() => {\r\n                flag=this.getMousePosition({clientX:getRandomInt(lx,rx),clientY:getRandomInt(ly,ry)})\r\n            }, i*delay);\r\n            if(flag===false)\r\n            i--;\r\n        }\r\n        for(let j=1;j<=1.1*n;j++)\r\n        {\r\n            setTimeout(() => {\r\n                let aq=getRandomInt(0,n-1)\r\n                this.drawLine(aq)\r\n                aq=getRandomInt(0,n-1)\r\n                this.drawLine(\" \"+aq)\r\n            }, i*delay);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    showPath(s){\r\n        if(done===false)\r\n        return\r\n        let i=parent[s]\r\n        document.getElementById(`point${s}`).style.fill='yellow'\r\n        if(typeof i===\"undefined\")\r\n        return\r\n        while(i.vertex!==-1)\r\n        {\r\n            document.getElementById(`edge${i.edgeNo}`).style.stroke='yellow'\r\n            document.getElementById(`point${i.vertex}`).style.fill='yellow'\r\n            i=parent[i.vertex]\r\n        }\r\n    }\r\n\r\n    removePath(s){\r\n        if(done===false)\r\n        return\r\n        let i=parent[s]\r\n        document.getElementById(`point${s}`).style.fill=color1\r\n        if(typeof i===\"undefined\")\r\n        return\r\n        while(i.vertex!==-1)\r\n        {\r\n            document.getElementById(`edge${i.edgeNo}`).style.stroke='blue'\r\n            document.getElementById(`point${i.vertex}`).style.fill=color1\r\n            i=parent[i.vertex]\r\n        }\r\n    }\r\n\r\n    //DJIKSTRA'S SHORTEST PATH ALGORITHM\r\n    minDist(dist,sptSet) \r\n    {\r\n        // Initialize min value \r\n        let min = INT_MAX, min_index; \r\n        for (let v = 0; v < this.state.points.length; v++) \r\n            if (sptSet[v] === false && dist[v] <= min) \r\n                {\r\n                    min = dist[v]\r\n                    min_index = v;\r\n                }\r\n        return min_index;\r\n    }\r\n    dijkstraAnimations(s){\r\n        this.reset()\r\n        let ar=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            ar.push([])\r\n            for(let j=0;j<this.state.points.length;j++)\r\n            ar[i].push(0)\r\n        }\r\n        //forming adj matrix\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            ar[this.state.edges[i].u][this.state.edges[i].v]=({wt:weights[i],edgeNo:i})\r\n            ar[this.state.edges[i].v][this.state.edges[i].u]=({wt:weights[i],edgeNo:i})\r\n        }\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        vis[i]=false;\r\n        let animations=[]\r\n        let dist=[]\r\n        parent=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        dist[i]=100000\r\n        dist[s]=0\r\n        parent[s]={vertex:-1,edgeNo:-1}\r\n        animations.push({\r\n            x:s,\r\n            y:0,\r\n            color:'setdist'\r\n        })\r\n        for(let it=0;it<this.state.points.length;it++)\r\n        {\r\n            let u=this.minDist(dist,vis)\r\n            if(dist[u]===INT_MAX)\r\n            return animations;\r\n            vis[u]=true\r\n            animations.push({\r\n                x:u,\r\n                y:-1,\r\n                color:'confirmdist'\r\n            })\r\n            for(let v=0;v<this.state.points.length;v++)\r\n            {\r\n                if(!vis[v] && ar[u][v].wt && dist[u]+ar[u][v].wt<dist[v])\r\n                {\r\n                    parent[v]={vertex:u,edgeNo:ar[u][v].edgeNo}\r\n                    dist[v]=dist[u]+ar[u][v].wt\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:v,\r\n                        y:dist[v],\r\n                        color:'setdist'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return animations\r\n    }\r\n\r\n    dijkstra(s){\r\n        if(s>=this.state.points.length)\r\n        return\r\n        if(s===\"\" && s!=='0')\r\n        {\r\n            alert(\"Enter a source vertex\")\r\n            return\r\n        }\r\n        for(let i=0;i<s.length;i++)\r\n        {\r\n            if(s[i]!=='0' && s[i]!=='1' && s[i]!=='2' && s[i]!=='3' && s[i]!=='4' && s[i]!=='5' && s[i]!=='6' && s[i]!=='7' && s[i]!=='8' && s[i]!=='9')\r\n            {\r\n                alert(\"Enter an integer as source vertex\")\r\n                return\r\n            }\r\n        }\r\n        const animations=this.dijkstraAnimations(s)\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge'){\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='setdist')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill='blue'\r\n                    q=document.getElementById(`dist${animations[i].x}`);\r\n                    q.textContent=animations[i].y\r\n                    \r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n            else\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill=color1\r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n        }\r\n        done=true\r\n    }\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle key={\"point\"+idx} id={\"point\"+idx} cx={x.x} cy={x.y} r={r} stroke=\"black\" onClick={(event)=>this.drawLine(idx)} strokeWidth=\"1.5\" style={{fill:\"orange\",zIndex:'1',transition:'all .2s linear',cursor:'pointer'}} onMouseOver={()=>this.showPath(idx)} onMouseOut={()=>this.removePath(idx)}/>\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((pt,idx)=>{\r\n            return(\r\n                <text  key={\"index\"+idx} id={\"index\"+idx} fontSize=\"14\" fontFamily=\"Arial\" x={pt.x-4} y={pt.y+4} onClick={(event)=>this.drawLine(idx)} style={{zIndex:'1',fill:\"#fff\",transition:'all .2s linear',cursor:'pointer'}} onMouseOver={()=>this.showPath(idx)} onMouseOut={()=>this.removePath(idx)}>{idx}</text>\r\n            )\r\n        })\r\n        var lines=this.state.edges.map((q,idx)=>{\r\n            return(\r\n                <line key={\"edge\"+idx} id={\"edge\"+idx} x1={this.state.points[q.u].x} y1={this.state.points[q.u].y} x2={this.state.points[q.v].x} y2={this.state.points[q.v].y} style={{stroke:'red',strokeWidth:'2',zIndex:'-1',transition:'all .2s linear'}} />\r\n            )\r\n        })\r\n        var edgeWeights=this.state.edges.map((edge,idx)=>{\r\n            return(\r\n                <text key={\"weight\"+idx} id={\"weight\"+idx} fontSize=\"14\" fontFamily=\"Arial\" fill=\"#000\" x={(this.state.points[edge.u].x+this.state.points[edge.v].x)/2.0} y={(this.state.points[edge.u].y+this.state.points[edge.v].y)/2.0} >{weights[idx]}</text>\r\n            )\r\n        })\r\n        var dists=this.state.points.map((x,idx)=>{\r\n            return(\r\n                <text key={\"dist\"+idx} id={\"dist\"+idx} fontSize='14' fontFamily='Arial' fill='#000' x={x.x+r+2} y={x.y+r+2}>&infin;</text>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <div>\r\n            <center>\r\n            <button className=\"button button4\" onClick={()=>this.dijkstra(this.state.src)}>Djikstra's Algorithm</button>\r\n            <button className=\"button button4\" onClick={()=>this.randomWeights()}>Randomize edge weights</button>\r\n            <button className=\"button button4\" onClick={()=>this.reset()}>Reset</button>\r\n            <button className=\"button button4\" onClick={()=>this.clear()}>Clear Canvas</button>\r\n            <text style={{fontFamily:'Georgia'}}>&nbsp;&nbsp;&nbsp;Enter source vertex: &nbsp;</text>\r\n            <input type=\"text\" id=\"src\" value={this.state.src} onChange={(e)=>this.changeSrc(e)} />\r\n            </center>\r\n            <svg paintOrder='markers' ref='svg' width={window.innerWidth} height={window.innerHeight*.9} style={{border:'1px dotted black',backgroundColor:'rgb(251, 250, 255)',cursor:'crosshair'}} onClick={(event)=>this.getMousePosition(event)}>\r\n            {edgeWeights}\r\n            {lines}\r\n            {pts}\r\n            {ptsidx}\r\n            {dists}\r\n            </svg>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShortestPath\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}"]},"metadata":{},"sourceType":"module"}