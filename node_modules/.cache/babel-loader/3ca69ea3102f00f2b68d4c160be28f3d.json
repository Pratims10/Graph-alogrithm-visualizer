{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\Graph\\\\graph-algorithm-visualizer\\\\src\\\\components\\\\canvas.js\";\nimport React, { Component } from 'react';\nlet v1 = null,\n    v2 = null;\nlet adj = [];\nvar delay = 1000;\nvar color1 = 'rgb(0, 204, 0)';\nexport class Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: [],\n      edges: [],\n      src: 0\n    };\n  }\n\n  getMousePosition(event) {\n    this.reset();\n    let x = event.clientX - this.refs.svg.getBoundingClientRect().left;\n    let y = event.clientY - this.refs.svg.getBoundingClientRect().top;\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      let x1 = this.state.points[i].x;\n      let y1 = this.state.points[i].y;\n      let dist = (x - x1) * (x - x1) + (y - y1) * (y - y1);\n\n      if (dist <= 900) {\n        return;\n      }\n    }\n\n    this.setState(prev => {\n      points: prev.points.push({\n        x: x,\n        y: y\n      });\n    }, function () {\n      adj.push([]);\n    });\n    this.forceUpdate();\n  }\n\n  drawLine(e, idx) {\n    this.reset();\n    let u = document.getElementById(`point${idx}`);\n    u.style.fill = 'red';\n    if (v1 === null) v1 = idx;else {\n      v2 = idx;\n      u = document.getElementById(`point${v1}`);\n      u.style.fill = 'orange';\n      u = document.getElementById(`point${v2}`);\n      u.style.fill = 'orange';\n\n      for (let i = 0; i < this.state.edges.length; i++) {\n        if (this.state.edges[i].u === v1 && this.state.edges[i].v === v2) {\n          v1 = null;\n          v2 = null;\n          return;\n        } else if (this.state.edges[i].u === v2 && this.state.edges[i].v === v1) {\n          v1 = null;\n          v2 = null;\n          return;\n        }\n      }\n\n      if (v1 === v2) {\n        v1 = null;\n        v2 = null;\n        return;\n      }\n\n      let temp = [];\n\n      for (let i = 0; i < this.state.points.length; i++) if (i != v1 && i != v2) temp.push(this.state.points[i]);\n\n      console.log(temp);\n      this.setState(prev => {\n        edges: prev.edges.push({\n          u: v1,\n          v: v2\n        });\n      }, function () {\n        adj[v1].push({\n          vertex: v2,\n          edgeNo: this.state.edges.length - 1\n        });\n        adj[v2].push({\n          vertex: v1,\n          edgeNo: this.state.edges.length - 1\n        });\n        v1 = null;\n        v2 = null;\n      });\n      this.forceUpdate();\n    }\n  }\n\n  reset() {\n    for (let i = 0; i < this.state.points.length; i++) {\n      if (document.getElementById(`point${i}`).style.fill === 'blue' || document.getElementById(`point${i}`).style.fill === color1) document.getElementById(`point${i}`).style.fill = 'orange';\n    }\n\n    for (let i = 0; i < this.state.edges.length; i++) {\n      if (document.getElementById(`edge${i}`).style.stroke === 'blue') document.getElementById(`edge${i}`).style.stroke = 'red';\n    }\n  }\n\n  changeSrc(e) {\n    let x = document.getElementById('src').value;\n    this.setState({\n      src: x\n    });\n  }\n\n  clear() {\n    this.setState({\n      points: [],\n      edges: [],\n      src: 0\n    }, function () {\n      v1 = null;\n      v2 = null;\n      adj = [];\n    });\n    this.forceUpdate();\n  } //BFS TRAVERSAL OF GRAPH\n\n\n  bfsAnimations(s) {\n    let animations = [];\n    let vis = [];\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      vis[i] = false;\n    }\n\n    let queue = [];\n    queue.push(s);\n    vis[s] = true;\n\n    while (queue.length !== 0) {\n      var x = queue[0];\n      queue.shift();\n      animations.push({\n        x: x,\n        y: -1,\n        color: color1\n      });\n\n      for (let i = 0; i < adj[x].length; i++) {\n        if (vis[adj[x][i].vertex] === false) {\n          vis[adj[x][i].vertex] = true;\n          queue.push(adj[x][i].vertex);\n          animations.push({\n            x: adj[x][i].edgeNo,\n            y: -1,\n            color: 'edge'\n          });\n          animations.push({\n            x: adj[x][i].edgeNo,\n            y: -1,\n            color: 'shrinkEdge'\n          });\n          animations.push({\n            x: adj[x][i].vertex,\n            y: -1,\n            color: 'blue'\n          });\n        }\n      }\n    }\n\n    return animations;\n  }\n\n  bfs(s) {\n    if (s >= this.state.points.length) return;\n    this.reset();\n    const animations = this.bfsAnimations(s);\n    let len = animations.length;\n\n    for (let i = 0; i < len; i++) {\n      if (animations[i].color === 'edge') {\n        let x1 = document.getElementById(`edge${animations[i].x}`);\n        setTimeout(() => {\n          x1.style.stroke = 'blue';\n          x1.style.strokeWidth = '5';\n          x1.style.borderRadius = '2';\n        }, i * delay);\n      } else if (animations[i].color == 'shrinkEdge') {\n        let x1 = document.getElementById(`edge${animations[i].x}`);\n        setTimeout(() => {\n          x1.style.strokeWidth = '2';\n          x1.style.borderRadius = '0';\n        }, i * delay);\n      } else {\n        let x = document.getElementById(`point${animations[i].x}`);\n        setTimeout(() => {\n          x.style.fill = animations[i].color;\n        }, i * delay);\n      }\n    }\n  } //DFS ALGORITHM\n\n\n  dfsutil(s, vis, animations) {\n    animations.push({\n      x: s,\n      y: -1,\n      color: color1\n    });\n    vis[s] = true;\n\n    for (let i = 0; i < adj[s].length; i++) {\n      if (!vis[adj[s][i].vertex]) {\n        animations.push({\n          x: adj[s][i].edgeNo,\n          y: -1,\n          color: 'edge'\n        });\n        animations.push({\n          x: adj[s][i].edgeNo,\n          y: -1,\n          color: 'shrinkEdge'\n        });\n        animations.push({\n          x: adj[s][i].vertex,\n          y: -1,\n          color: 'blue'\n        });\n        this.dfsutil(adj[s][i].vertex, vis, animations);\n      }\n    }\n  }\n\n  dfsAnimations(s) {\n    var animations = [];\n    let vis = [];\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      vis[i] = false;\n    }\n\n    this.dfsutil(s, vis, animations);\n    return animations;\n  }\n\n  dfs(s) {\n    if (s >= this.state.points.length) return;\n    const animations = this.dfsAnimations(s);\n    this.reset();\n    let len = animations.length;\n\n    for (let i = 0; i < len; i++) {\n      if (animations[i].color === 'edge') {\n        let x1 = document.getElementById(`edge${animations[i].x}`);\n        setTimeout(() => {\n          x1.style.stroke = 'blue';\n          x1.style.strokeWidth = '5';\n          x1.style.borderRadius = '2';\n        }, i * delay);\n      } else if (animations[i].color === 'shrinkEdge') {\n        let x1 = document.getElementById(`edge${animations[i].x}`);\n        setTimeout(() => {\n          x1.style.strokeWidth = '2';\n          x1.style.borderRadius = '0';\n        }, i * delay);\n      } else {\n        let x = document.getElementById(`point${animations[i].x}`);\n        setTimeout(() => {\n          x.style.fill = animations[i].color;\n        }, i * delay);\n      }\n    }\n  }\n\n  render() {\n    var pts = this.state.points.map((x, idx) => {\n      return React.createElement(\"circle\", {\n        key: \"point\" + idx,\n        id: \"point\" + idx,\n        cx: x.x,\n        cy: x.y,\n        r: \"14\",\n        stroke: \"black\",\n        onClick: event => this.drawLine(event, idx),\n        strokeWidth: \".5\",\n        style: {\n          fill: \"orange\",\n          transition: 'all .2s linear',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      });\n    });\n    var ptsidx = this.state.points.map((pt, idx) => {\n      return React.createElement(\"text\", {\n        key: \"index\" + idx,\n        id: \"index\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        x: pt.x - 4,\n        y: pt.y + 4,\n        onClick: event => this.drawLine(event, idx),\n        style: {\n          fill: \"#fff\",\n          transition: 'all .2s linear',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, idx);\n    });\n    var lines = this.state.edges.map((q, idx) => {\n      return React.createElement(\"line\", {\n        key: \"edge\" + idx,\n        id: \"edge\" + idx,\n        x1: this.state.points[q.u].x,\n        y1: this.state.points[q.u].y,\n        x2: this.state.points[q.v].x,\n        y2: this.state.points[q.v].y,\n        style: {\n          stroke: 'red',\n          strokeWidth: '2',\n          transition: 'all .2s linear'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.bfs(this.state.src),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"BFS\"), React.createElement(\"button\", {\n      onClick: () => this.dfs(this.state.src),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"DFS\"), React.createElement(\"button\", {\n      onClick: () => this.reset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      onClick: () => this.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Clear Canvas\"), \"\\xA0\\xA0\\xA0Enter source vertex \\xA0\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"src\",\n      value: this.state.src,\n      onChange: e => this.changeSrc(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })), React.createElement(\"svg\", {\n      paintOrder: \"markers\",\n      ref: \"svg\",\n      width: window.innerWidth,\n      height: window.innerHeight * 0.9,\n      style: {\n        border: '1px dotted black',\n        backgroundColor: 'rgb(251, 250, 255)',\n        cursor: 'crosshair'\n      },\n      onClick: event => this.getMousePosition(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, lines, pts, ptsidx));\n  }\n\n}\nexport default Canvas;\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["H:/React/Graph/graph-algorithm-visualizer/src/components/canvas.js"],"names":["React","Component","v1","v2","adj","delay","color1","Canvas","constructor","props","state","points","edges","src","getMousePosition","event","reset","x","clientX","refs","svg","getBoundingClientRect","left","y","clientY","top","i","length","x1","y1","dist","setState","prev","push","forceUpdate","drawLine","e","idx","u","document","getElementById","style","fill","v","temp","console","log","vertex","edgeNo","stroke","changeSrc","value","clear","bfsAnimations","s","animations","vis","queue","shift","color","bfs","len","setTimeout","strokeWidth","borderRadius","dfsutil","dfsAnimations","dfs","render","pts","map","transition","cursor","ptsidx","pt","lines","q","window","innerWidth","innerHeight","border","backgroundColor","getRandomInt","min","max","Math","ceil","floor","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,IAAIC,EAAE,GAAC,IAAP;AAAA,IAAYC,EAAE,GAAC,IAAf;AACA,IAAIC,GAAG,GAAC,EAAR;AACA,IAAIC,KAAK,GAAC,IAAV;AACA,IAAIC,MAAM,GAAC,gBAAX;AACA,OAAO,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACRC,MAAAA,MAAM,EAAC,EADC;AAERC,MAAAA,KAAK,EAAC,EAFE;AAGRC,MAAAA,GAAG,EAAC;AAHI,KAAb;AAKH;;AAEDC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,SAAKC,KAAL;AACA,QAAIC,CAAC,GAAGF,KAAK,CAACG,OAAN,GAAc,KAAKC,IAAL,CAAUC,GAAV,CAAcC,qBAAd,GAAsCC,IAA5D;AACA,QAAIC,CAAC,GAAGR,KAAK,CAACS,OAAN,GAAc,KAAKL,IAAL,CAAUC,GAAV,CAAcC,qBAAd,GAAsCI,GAA5D;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAAhC,EAAuCD,CAAC,EAAxC,EACA;AACI,UAAIE,EAAE,GAAC,KAAKlB,KAAL,CAAWC,MAAX,CAAkBe,CAAlB,EAAqBT,CAA5B;AACA,UAAIY,EAAE,GAAC,KAAKnB,KAAL,CAAWC,MAAX,CAAkBe,CAAlB,EAAqBH,CAA5B;AACA,UAAIO,IAAI,GAAC,CAACb,CAAC,GAACW,EAAH,KAAQX,CAAC,GAACW,EAAV,IAAc,CAACL,CAAC,GAACM,EAAH,KAAQN,CAAC,GAACM,EAAV,CAAvB;;AACA,UAAGC,IAAI,IAAE,GAAT,EACA;AACI;AACH;AACJ;;AACD,SAAKC,QAAL,CAAeC,IAAD,IAAQ;AAClBrB,MAAAA,MAAM,EAACqB,IAAI,CAACrB,MAAL,CAAYsB,IAAZ,CAAiB;AACpBhB,QAAAA,CAAC,EAACA,CADkB;AAEpBM,QAAAA,CAAC,EAACA;AAFkB,OAAjB;AAIV,KALD,EAKE,YAAU;AACRnB,MAAAA,GAAG,CAAC6B,IAAJ,CAAS,EAAT;AACH,KAPD;AAQA,SAAKC,WAAL;AACH;;AAEDC,EAAAA,QAAQ,CAACC,CAAD,EAAGC,GAAH,EAAO;AACX,SAAKrB,KAAL;AACA,QAAIsB,CAAC,GAACC,QAAQ,CAACC,cAAT,CAAyB,QAAOH,GAAI,EAApC,CAAN;AACAC,IAAAA,CAAC,CAACG,KAAF,CAAQC,IAAR,GAAa,KAAb;AACA,QAAGxC,EAAE,KAAG,IAAR,EACAA,EAAE,GAACmC,GAAH,CADA,KAEK;AACDlC,MAAAA,EAAE,GAACkC,GAAH;AACAC,MAAAA,CAAC,GAACC,QAAQ,CAACC,cAAT,CAAyB,QAAOtC,EAAG,EAAnC,CAAF;AACAoC,MAAAA,CAAC,CAACG,KAAF,CAAQC,IAAR,GAAa,QAAb;AACAJ,MAAAA,CAAC,GAACC,QAAQ,CAACC,cAAT,CAAyB,QAAOrC,EAAG,EAAnC,CAAF;AACAmC,MAAAA,CAAC,CAACG,KAAF,CAAQC,IAAR,GAAa,QAAb;;AACA,WAAI,IAAIhB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,KAAL,CAAWE,KAAX,CAAiBe,MAA/B,EAAsCD,CAAC,EAAvC,EACA;AACI,YAAG,KAAKhB,KAAL,CAAWE,KAAX,CAAiBc,CAAjB,EAAoBY,CAApB,KAAwBpC,EAAxB,IAA8B,KAAKQ,KAAL,CAAWE,KAAX,CAAiBc,CAAjB,EAAoBiB,CAApB,KAAwBxC,EAAzD,EACA;AAAID,UAAAA,EAAE,GAAC,IAAH;AACAC,UAAAA,EAAE,GAAC,IAAH;AACA;AACH,SAJD,MAKK,IAAG,KAAKO,KAAL,CAAWE,KAAX,CAAiBc,CAAjB,EAAoBY,CAApB,KAAwBnC,EAAxB,IAA8B,KAAKO,KAAL,CAAWE,KAAX,CAAiBc,CAAjB,EAAoBiB,CAApB,KAAwBzC,EAAzD,EACL;AACIA,UAAAA,EAAE,GAAC,IAAH;AACAC,UAAAA,EAAE,GAAC,IAAH;AACA;AACH;AACJ;;AACD,UAAGD,EAAE,KAAGC,EAAR,EACA;AACID,QAAAA,EAAE,GAAC,IAAH;AACAC,QAAAA,EAAE,GAAC,IAAH;AACA;AACH;;AACD,UAAIyC,IAAI,GAAC,EAAT;;AACA,WAAI,IAAIlB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAAhC,EAAuCD,CAAC,EAAxC,EACA,IAAGA,CAAC,IAAExB,EAAH,IAASwB,CAAC,IAAEvB,EAAf,EACAyC,IAAI,CAACX,IAAL,CAAU,KAAKvB,KAAL,CAAWC,MAAX,CAAkBe,CAAlB,CAAV;;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKb,QAAL,CAAeC,IAAD,IAAQ;AAClBpB,QAAAA,KAAK,EAACoB,IAAI,CAACpB,KAAL,CAAWqB,IAAX,CAAgB;AAClBK,UAAAA,CAAC,EAACpC,EADgB;AAElByC,UAAAA,CAAC,EAACxC;AAFgB,SAAhB;AAIT,OALD,EAKE,YAAU;AACRC,QAAAA,GAAG,CAACF,EAAD,CAAH,CAAQ+B,IAAR,CAAa;AAACc,UAAAA,MAAM,EAAC5C,EAAR;AAAW6C,UAAAA,MAAM,EAAC,KAAKtC,KAAL,CAAWE,KAAX,CAAiBe,MAAjB,GAAwB;AAA1C,SAAb;AACAvB,QAAAA,GAAG,CAACD,EAAD,CAAH,CAAQ8B,IAAR,CAAa;AAACc,UAAAA,MAAM,EAAC7C,EAAR;AAAW8C,UAAAA,MAAM,EAAC,KAAKtC,KAAL,CAAWE,KAAX,CAAiBe,MAAjB,GAAwB;AAA1C,SAAb;AACAzB,QAAAA,EAAE,GAAC,IAAH;AACAC,QAAAA,EAAE,GAAC,IAAH;AACH,OAVD;AAWA,WAAK+B,WAAL;AACH;AACJ;;AAEDlB,EAAAA,KAAK,GAAE;AACH,SAAI,IAAIU,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAAhC,EAAuCD,CAAC,EAAxC,EAA2C;AACvC,UAAGa,QAAQ,CAACC,cAAT,CAAyB,QAAOd,CAAE,EAAlC,EAAqCe,KAArC,CAA2CC,IAA3C,KAAkD,MAAlD,IAA4DH,QAAQ,CAACC,cAAT,CAAyB,QAAOd,CAAE,EAAlC,EAAqCe,KAArC,CAA2CC,IAA3C,KAAkDpC,MAAjH,EACAiC,QAAQ,CAACC,cAAT,CAAyB,QAAOd,CAAE,EAAlC,EAAqCe,KAArC,CAA2CC,IAA3C,GAAgD,QAAhD;AACH;;AACD,SAAI,IAAIhB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,KAAL,CAAWE,KAAX,CAAiBe,MAA/B,EAAsCD,CAAC,EAAvC,EACA;AACI,UAAGa,QAAQ,CAACC,cAAT,CAAyB,OAAMd,CAAE,EAAjC,EAAoCe,KAApC,CAA0CQ,MAA1C,KAAmD,MAAtD,EACAV,QAAQ,CAACC,cAAT,CAAyB,OAAMd,CAAE,EAAjC,EAAoCe,KAApC,CAA0CQ,MAA1C,GAAiD,KAAjD;AACH;AACJ;;AAEDC,EAAAA,SAAS,CAACd,CAAD,EAAG;AACR,QAAInB,CAAC,GAACsB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BW,KAArC;AACA,SAAKpB,QAAL,CAAc;AACVlB,MAAAA,GAAG,EAACI;AADM,KAAd;AAGH;;AAEDmC,EAAAA,KAAK,GAAE;AACH,SAAKrB,QAAL,CAAc;AACVpB,MAAAA,MAAM,EAAC,EADG;AAEVC,MAAAA,KAAK,EAAC,EAFI;AAGVC,MAAAA,GAAG,EAAC;AAHM,KAAd,EAIE,YAAU;AACRX,MAAAA,EAAE,GAAC,IAAH;AACAC,MAAAA,EAAE,GAAC,IAAH;AACAC,MAAAA,GAAG,GAAC,EAAJ;AACH,KARD;AASA,SAAK8B,WAAL;AACH,GAtHiC,CAwHlC;;;AACAmB,EAAAA,aAAa,CAACC,CAAD,EAAG;AACZ,QAAIC,UAAU,GAAC,EAAf;AACA,QAAIC,GAAG,GAAC,EAAR;;AACA,SAAI,IAAI9B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAAhC,EAAuCD,CAAC,EAAxC,EACA;AACI8B,MAAAA,GAAG,CAAC9B,CAAD,CAAH,GAAO,KAAP;AACH;;AACD,QAAI+B,KAAK,GAAC,EAAV;AACAA,IAAAA,KAAK,CAACxB,IAAN,CAAWqB,CAAX;AACAE,IAAAA,GAAG,CAACF,CAAD,CAAH,GAAO,IAAP;;AACA,WAAMG,KAAK,CAAC9B,MAAN,KAAe,CAArB,EACA;AACI,UAAIV,CAAC,GAACwC,KAAK,CAAC,CAAD,CAAX;AACAA,MAAAA,KAAK,CAACC,KAAN;AACAH,MAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,QAAAA,CAAC,EAACA,CADU;AAEZM,QAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,QAAAA,KAAK,EAACrD;AAHM,OAAhB;;AAKA,WAAI,IAAIoB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACtB,GAAG,CAACa,CAAD,CAAH,CAAOU,MAArB,EAA4BD,CAAC,EAA7B,EACA;AACI,YAAG8B,GAAG,CAACpD,GAAG,CAACa,CAAD,CAAH,CAAOS,CAAP,EAAUqB,MAAX,CAAH,KAAwB,KAA3B,EACA;AACIS,UAAAA,GAAG,CAACpD,GAAG,CAACa,CAAD,CAAH,CAAOS,CAAP,EAAUqB,MAAX,CAAH,GAAsB,IAAtB;AACAU,UAAAA,KAAK,CAACxB,IAAN,CAAW7B,GAAG,CAACa,CAAD,CAAH,CAAOS,CAAP,EAAUqB,MAArB;AAEAQ,UAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,YAAAA,CAAC,EAACb,GAAG,CAACa,CAAD,CAAH,CAAOS,CAAP,EAAUsB,MADA;AAEZzB,YAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,YAAAA,KAAK,EAAC;AAHM,WAAhB;AAKAJ,UAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,YAAAA,CAAC,EAACb,GAAG,CAACa,CAAD,CAAH,CAAOS,CAAP,EAAUsB,MADA;AAEZzB,YAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,YAAAA,KAAK,EAAC;AAHM,WAAhB;AAMAJ,UAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,YAAAA,CAAC,EAACb,GAAG,CAACa,CAAD,CAAH,CAAOS,CAAP,EAAUqB,MADA;AAEZxB,YAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,YAAAA,KAAK,EAAC;AAHM,WAAhB;AAKH;AACJ;AACJ;;AACD,WAAOJ,UAAP;AACH;;AAEDK,EAAAA,GAAG,CAACN,CAAD,EAAG;AACF,QAAGA,CAAC,IAAE,KAAK5C,KAAL,CAAWC,MAAX,CAAkBgB,MAAxB,EACA;AACA,SAAKX,KAAL;AACA,UAAMuC,UAAU,GAAC,KAAKF,aAAL,CAAmBC,CAAnB,CAAjB;AACA,QAAIO,GAAG,GAACN,UAAU,CAAC5B,MAAnB;;AACA,SAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACmC,GAAd,EAAkBnC,CAAC,EAAnB,EACA;AACI,UAAG6B,UAAU,CAAC7B,CAAD,CAAV,CAAciC,KAAd,KAAsB,MAAzB,EACA;AACI,YAAI/B,EAAE,GAACW,QAAQ,CAACC,cAAT,CAAyB,OAAMe,UAAU,CAAC7B,CAAD,CAAV,CAAcT,CAAE,EAA/C,CAAP;AACA6C,QAAAA,UAAU,CAAC,MAAM;AACblC,UAAAA,EAAE,CAACa,KAAH,CAASQ,MAAT,GAAgB,MAAhB;AACArB,UAAAA,EAAE,CAACa,KAAH,CAASsB,WAAT,GAAqB,GAArB;AACAnC,UAAAA,EAAE,CAACa,KAAH,CAASuB,YAAT,GAAsB,GAAtB;AACH,SAJS,EAIPtC,CAAC,GAACrB,KAJK,CAAV;AAKH,OARD,MASK,IAAGkD,UAAU,CAAC7B,CAAD,CAAV,CAAciC,KAAd,IAAqB,YAAxB,EACL;AACI,YAAI/B,EAAE,GAACW,QAAQ,CAACC,cAAT,CAAyB,OAAMe,UAAU,CAAC7B,CAAD,CAAV,CAAcT,CAAE,EAA/C,CAAP;AACA6C,QAAAA,UAAU,CAAC,MAAM;AACblC,UAAAA,EAAE,CAACa,KAAH,CAASsB,WAAT,GAAqB,GAArB;AACAnC,UAAAA,EAAE,CAACa,KAAH,CAASuB,YAAT,GAAsB,GAAtB;AACH,SAHS,EAGPtC,CAAC,GAACrB,KAHK,CAAV;AAIH,OAPI,MASL;AACQ,YAAIY,CAAC,GAACsB,QAAQ,CAACC,cAAT,CAAyB,QAAOe,UAAU,CAAC7B,CAAD,CAAV,CAAcT,CAAE,EAAhD,CAAN;AACA6C,QAAAA,UAAU,CAAC,MAAM;AACb7C,UAAAA,CAAC,CAACwB,KAAF,CAAQC,IAAR,GAAaa,UAAU,CAAC7B,CAAD,CAAV,CAAciC,KAA3B;AACH,SAFS,EAEPjC,CAAC,GAACrB,KAFK,CAAV;AAGP;AACJ;AACJ,GA1MiC,CA4MlC;;;AACA4D,EAAAA,OAAO,CAACX,CAAD,EAAGE,GAAH,EAAOD,UAAP,EAAkB;AACrBA,IAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,MAAAA,CAAC,EAACqC,CADU;AAEZ/B,MAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,MAAAA,KAAK,EAACrD;AAHM,KAAhB;AAKAkD,IAAAA,GAAG,CAACF,CAAD,CAAH,GAAO,IAAP;;AACA,SAAI,IAAI5B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACtB,GAAG,CAACkD,CAAD,CAAH,CAAO3B,MAArB,EAA4BD,CAAC,EAA7B,EACA;AACI,UAAG,CAAC8B,GAAG,CAACpD,GAAG,CAACkD,CAAD,CAAH,CAAO5B,CAAP,EAAUqB,MAAX,CAAP,EACA;AACIQ,QAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,UAAAA,CAAC,EAACb,GAAG,CAACkD,CAAD,CAAH,CAAO5B,CAAP,EAAUsB,MADA;AAEZzB,UAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,UAAAA,KAAK,EAAC;AAHM,SAAhB;AAMAJ,QAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,UAAAA,CAAC,EAACb,GAAG,CAACkD,CAAD,CAAH,CAAO5B,CAAP,EAAUsB,MADA;AAEZzB,UAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,UAAAA,KAAK,EAAC;AAHM,SAAhB;AAKAJ,QAAAA,UAAU,CAACtB,IAAX,CAAgB;AACZhB,UAAAA,CAAC,EAACb,GAAG,CAACkD,CAAD,CAAH,CAAO5B,CAAP,EAAUqB,MADA;AAEZxB,UAAAA,CAAC,EAAC,CAAC,CAFS;AAGZoC,UAAAA,KAAK,EAAC;AAHM,SAAhB;AAKA,aAAKM,OAAL,CAAa7D,GAAG,CAACkD,CAAD,CAAH,CAAO5B,CAAP,EAAUqB,MAAvB,EAA8BS,GAA9B,EAAkCD,UAAlC;AACH;AACJ;AACJ;;AAEDW,EAAAA,aAAa,CAACZ,CAAD,EAAG;AACZ,QAAIC,UAAU,GAAC,EAAf;AACA,QAAIC,GAAG,GAAC,EAAR;;AACA,SAAI,IAAI9B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAAhC,EAAuCD,CAAC,EAAxC,EACA;AACI8B,MAAAA,GAAG,CAAC9B,CAAD,CAAH,GAAO,KAAP;AACH;;AACD,SAAKuC,OAAL,CAAaX,CAAb,EAAeE,GAAf,EAAmBD,UAAnB;AACA,WAAOA,UAAP;AACH;;AAEDY,EAAAA,GAAG,CAACb,CAAD,EAAG;AACF,QAAGA,CAAC,IAAE,KAAK5C,KAAL,CAAWC,MAAX,CAAkBgB,MAAxB,EACA;AACA,UAAM4B,UAAU,GAAC,KAAKW,aAAL,CAAmBZ,CAAnB,CAAjB;AACA,SAAKtC,KAAL;AACA,QAAI6C,GAAG,GAACN,UAAU,CAAC5B,MAAnB;;AACA,SAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACmC,GAAd,EAAkBnC,CAAC,EAAnB,EACA;AACI,UAAG6B,UAAU,CAAC7B,CAAD,CAAV,CAAciC,KAAd,KAAsB,MAAzB,EACA;AACI,YAAI/B,EAAE,GAACW,QAAQ,CAACC,cAAT,CAAyB,OAAMe,UAAU,CAAC7B,CAAD,CAAV,CAAcT,CAAE,EAA/C,CAAP;AACA6C,QAAAA,UAAU,CAAC,MAAM;AACblC,UAAAA,EAAE,CAACa,KAAH,CAASQ,MAAT,GAAgB,MAAhB;AACArB,UAAAA,EAAE,CAACa,KAAH,CAASsB,WAAT,GAAqB,GAArB;AACAnC,UAAAA,EAAE,CAACa,KAAH,CAASuB,YAAT,GAAsB,GAAtB;AACH,SAJS,EAIPtC,CAAC,GAACrB,KAJK,CAAV;AAKH,OARD,MASK,IAAGkD,UAAU,CAAC7B,CAAD,CAAV,CAAciC,KAAd,KAAsB,YAAzB,EACL;AACI,YAAI/B,EAAE,GAACW,QAAQ,CAACC,cAAT,CAAyB,OAAMe,UAAU,CAAC7B,CAAD,CAAV,CAAcT,CAAE,EAA/C,CAAP;AACA6C,QAAAA,UAAU,CAAC,MAAM;AACblC,UAAAA,EAAE,CAACa,KAAH,CAASsB,WAAT,GAAqB,GAArB;AACAnC,UAAAA,EAAE,CAACa,KAAH,CAASuB,YAAT,GAAsB,GAAtB;AACH,SAHS,EAGPtC,CAAC,GAACrB,KAHK,CAAV;AAIH,OAPI,MASL;AACQ,YAAIY,CAAC,GAACsB,QAAQ,CAACC,cAAT,CAAyB,QAAOe,UAAU,CAAC7B,CAAD,CAAV,CAAcT,CAAE,EAAhD,CAAN;AACA6C,QAAAA,UAAU,CAAC,MAAM;AACb7C,UAAAA,CAAC,CAACwB,KAAF,CAAQC,IAAR,GAAaa,UAAU,CAAC7B,CAAD,CAAV,CAAciC,KAA3B;AACH,SAFS,EAEPjC,CAAC,GAACrB,KAFK,CAAV;AAGP;AACJ;AACJ;;AACD+D,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAC,KAAK3D,KAAL,CAAWC,MAAX,CAAkB2D,GAAlB,CAAsB,CAACrD,CAAD,EAAGoB,GAAH,KAAS;AACnC,aACA;AAAQ,QAAA,GAAG,EAAE,UAAQA,GAArB;AAA0B,QAAA,EAAE,EAAE,UAAQA,GAAtC;AAA2C,QAAA,EAAE,EAAEpB,CAAC,CAACA,CAAjD;AAAoD,QAAA,EAAE,EAAEA,CAAC,CAACM,CAA1D;AAA6D,QAAA,CAAC,EAAC,IAA/D;AAAoE,QAAA,MAAM,EAAC,OAA3E;AAAmF,QAAA,OAAO,EAAGR,KAAD,IAAS,KAAKoB,QAAL,CAAcpB,KAAd,EAAoBsB,GAApB,CAArG;AAA+H,QAAA,WAAW,EAAC,IAA3I;AAAgJ,QAAA,KAAK,EAAE;AAACK,UAAAA,IAAI,EAAC,QAAN;AAAe6B,UAAAA,UAAU,EAAC,gBAA1B;AAA2CC,UAAAA,MAAM,EAAC;AAAlD,SAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAGH,KAJO,CAAR;AAKA,QAAIC,MAAM,GAAC,KAAK/D,KAAL,CAAWC,MAAX,CAAkB2D,GAAlB,CAAsB,CAACI,EAAD,EAAIrC,GAAJ,KAAU;AACvC,aACI;AAAO,QAAA,GAAG,EAAE,UAAQA,GAApB;AAAyB,QAAA,EAAE,EAAE,UAAQA,GAArC;AAA0C,QAAA,QAAQ,EAAC,IAAnD;AAAwD,QAAA,UAAU,EAAC,OAAnE;AAA2E,QAAA,CAAC,EAAEqC,EAAE,CAACzD,CAAH,GAAK,CAAnF;AAAsF,QAAA,CAAC,EAAEyD,EAAE,CAACnD,CAAH,GAAK,CAA9F;AAAiG,QAAA,OAAO,EAAGR,KAAD,IAAS,KAAKoB,QAAL,CAAcpB,KAAd,EAAoBsB,GAApB,CAAnH;AAA6I,QAAA,KAAK,EAAE;AAACK,UAAAA,IAAI,EAAC,MAAN;AAAa6B,UAAAA,UAAU,EAAC,gBAAxB;AAAyCC,UAAAA,MAAM,EAAC;AAAhD,SAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiNnC,GAAjN,CADJ;AAGH,KAJU,CAAX;AAKA,QAAIsC,KAAK,GAAC,KAAKjE,KAAL,CAAWE,KAAX,CAAiB0D,GAAjB,CAAqB,CAACM,CAAD,EAAGvC,GAAH,KAAS;AACpC,aACI;AAAM,QAAA,GAAG,EAAE,SAAOA,GAAlB;AAAuB,QAAA,EAAE,EAAE,SAAOA,GAAlC;AAAuC,QAAA,EAAE,EAAE,KAAK3B,KAAL,CAAWC,MAAX,CAAkBiE,CAAC,CAACtC,CAApB,EAAuBrB,CAAlE;AAAqE,QAAA,EAAE,EAAE,KAAKP,KAAL,CAAWC,MAAX,CAAkBiE,CAAC,CAACtC,CAApB,EAAuBf,CAAhG;AAAmG,QAAA,EAAE,EAAE,KAAKb,KAAL,CAAWC,MAAX,CAAkBiE,CAAC,CAACjC,CAApB,EAAuB1B,CAA9H;AAAiI,QAAA,EAAE,EAAE,KAAKP,KAAL,CAAWC,MAAX,CAAkBiE,CAAC,CAACjC,CAApB,EAAuBpB,CAA5J;AAA+J,QAAA,KAAK,EAAE;AAAC0B,UAAAA,MAAM,EAAC,KAAR;AAAcc,UAAAA,WAAW,EAAC,GAA1B;AAA8BQ,UAAAA,UAAU,EAAC;AAAzC,SAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJS,CAAV;AAMA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKX,GAAL,CAAS,KAAKlD,KAAL,CAAWG,GAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAEA;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKsD,GAAL,CAAS,KAAKzD,KAAL,CAAWG,GAApB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,EAGA;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKG,KAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHA,EAIA;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKoC,KAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA,0CAMA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,KAAtB;AAA4B,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWG,GAA9C;AAAmD,MAAA,QAAQ,EAAGuB,CAAD,IAAK,KAAKc,SAAL,CAAed,CAAf,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADA,EASA;AAAK,MAAA,UAAU,EAAC,SAAhB;AAA0B,MAAA,GAAG,EAAC,KAA9B;AAAoC,MAAA,KAAK,EAAEyC,MAAM,CAACC,UAAlD;AAA8D,MAAA,MAAM,EAAED,MAAM,CAACE,WAAP,GAAmB,GAAzF;AAA8F,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,kBAAR;AAA2BC,QAAAA,eAAe,EAAC,oBAA3C;AAAgET,QAAAA,MAAM,EAAC;AAAvE,OAArG;AAA0L,MAAA,OAAO,EAAGzD,KAAD,IAAS,KAAKD,gBAAL,CAAsBC,KAAtB,CAA5M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC4D,KADD,EAECN,GAFD,EAGCI,MAHD,CATA,CADJ;AAkBH;;AA7TiC;AAgUtC,eAAelE,MAAf;;AACA,SAAS2E,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5BD,EAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,SAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH","sourcesContent":["import React, { Component } from 'react'\r\nlet v1=null,v2=null;\r\nlet adj=[]\r\nvar delay=1000\r\nvar color1='rgb(0, 204, 0)';\r\nexport class Canvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[],\r\n             edges:[],\r\n             src:0\r\n        }\r\n    }\r\n\r\n    getMousePosition(event) { \r\n        this.reset()\r\n        let x = event.clientX-this.refs.svg.getBoundingClientRect().left ;\r\n        let y = event.clientY-this.refs.svg.getBoundingClientRect().top;\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            let x1=this.state.points[i].x;\r\n            let y1=this.state.points[i].y;\r\n            let dist=(x-x1)*(x-x1)+(y-y1)*(y-y1);\r\n            if(dist<=900)\r\n            {\r\n                return;\r\n            }\r\n        }\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({\r\n                x:x,\r\n                y:y\r\n            })\r\n        },function(){\r\n            adj.push([])\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    drawLine(e,idx){\r\n        this.reset()\r\n        let u=document.getElementById(`point${idx}`);\r\n        u.style.fill='red';\r\n        if(v1===null)\r\n        v1=idx;\r\n        else {\r\n            v2=idx;\r\n            u=document.getElementById(`point${v1}`);\r\n            u.style.fill='orange';\r\n            u=document.getElementById(`point${v2}`);\r\n            u.style.fill='orange';\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(this.state.edges[i].u===v1 && this.state.edges[i].v===v2)\r\n                {   v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n                else if(this.state.edges[i].u===v2 && this.state.edges[i].v===v1)\r\n                {\r\n                    v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n            }\r\n            if(v1===v2)\r\n            {\r\n                v1=null\r\n                v2=null\r\n                return\r\n            }\r\n            let temp=[]\r\n            for(let i=0;i<this.state.points.length;i++)\r\n            if(i!=v1 && i!=v2)\r\n            temp.push(this.state.points[i])\r\n            console.log(temp)\r\n            this.setState((prev)=>{\r\n                edges:prev.edges.push({\r\n                    u:v1,\r\n                    v:v2\r\n                })\r\n            },function(){\r\n                adj[v1].push({vertex:v2,edgeNo:this.state.edges.length-1})\r\n                adj[v2].push({vertex:v1,edgeNo:this.state.edges.length-1})\r\n                v1=null\r\n                v2=null\r\n            })\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        for(let i=0;i<this.state.points.length;i++){\r\n            if(document.getElementById(`point${i}`).style.fill==='blue' || document.getElementById(`point${i}`).style.fill===color1)\r\n            document.getElementById(`point${i}`).style.fill='orange'\r\n        }\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            if(document.getElementById(`edge${i}`).style.stroke==='blue')\r\n            document.getElementById(`edge${i}`).style.stroke='red'\r\n        }\r\n    }\r\n    \r\n    changeSrc(e){\r\n        let x=document.getElementById('src').value\r\n        this.setState({\r\n            src:x\r\n        })\r\n    }\r\n\r\n    clear(){\r\n        this.setState({\r\n            points:[],\r\n            edges:[],\r\n            src:0\r\n        },function(){\r\n            v1=null\r\n            v2=null\r\n            adj=[]\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n    \r\n    //BFS TRAVERSAL OF GRAPH\r\n    bfsAnimations(s){\r\n        let animations=[]\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            vis[i]=false\r\n        }\r\n        let queue=[]\r\n        queue.push(s)\r\n        vis[s]=true;\r\n        while(queue.length!==0)\r\n        {\r\n            var x=queue[0]\r\n            queue.shift()\r\n            animations.push({\r\n                x:x,\r\n                y:-1,\r\n                color:color1\r\n            })\r\n            for(let i=0;i<adj[x].length;i++)\r\n            {\r\n                if(vis[adj[x][i].vertex]===false)\r\n                {\r\n                    vis[adj[x][i].vertex]=true;\r\n                    queue.push(adj[x][i].vertex)\r\n                    \r\n                    animations.push({\r\n                        x:adj[x][i].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:adj[x][i].edgeNo,\r\n                        y:-1,\r\n                        color:'shrinkEdge'\r\n                    })\r\n\r\n                    animations.push({\r\n                        x:adj[x][i].vertex,\r\n                        y:-1,\r\n                        color:'blue'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return animations\r\n    }\r\n\r\n    bfs(s){\r\n        if(s>=this.state.points.length)\r\n        return;\r\n        this.reset()\r\n        const animations=this.bfsAnimations(s)\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.stroke='blue'\r\n                    x1.style.strokeWidth='5'\r\n                    x1.style.borderRadius='2'\r\n                }, i*delay);\r\n            }\r\n            else if(animations[i].color=='shrinkEdge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.strokeWidth='2'\r\n                    x1.style.borderRadius='0'\r\n                }, i*delay);\r\n            }\r\n            else\r\n            {\r\n                    let x=document.getElementById(`point${animations[i].x}`)\r\n                    setTimeout(() => {\r\n                        x.style.fill=animations[i].color\r\n                    }, i*delay);\r\n            }\r\n        }\r\n    }\r\n\r\n    //DFS ALGORITHM\r\n    dfsutil(s,vis,animations){\r\n        animations.push({\r\n            x:s,\r\n            y:-1,\r\n            color:color1\r\n        })\r\n        vis[s]=true\r\n        for(let i=0;i<adj[s].length;i++)\r\n        {\r\n            if(!vis[adj[s][i].vertex])\r\n            {\r\n                animations.push({\r\n                    x:adj[s][i].edgeNo,\r\n                    y:-1,\r\n                    color:'edge'\r\n                })\r\n                \r\n                animations.push({\r\n                    x:adj[s][i].edgeNo,\r\n                    y:-1,\r\n                    color:'shrinkEdge'\r\n                })\r\n                animations.push({\r\n                    x:adj[s][i].vertex,\r\n                    y:-1,\r\n                    color:'blue'\r\n                })\r\n                this.dfsutil(adj[s][i].vertex,vis,animations)\r\n            }\r\n        }\r\n    }\r\n\r\n    dfsAnimations(s){\r\n        var animations=[]\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            vis[i]=false\r\n        }\r\n        this.dfsutil(s,vis,animations)\r\n        return animations\r\n    }\r\n\r\n    dfs(s){\r\n        if(s>=this.state.points.length)\r\n        return;\r\n        const animations=this.dfsAnimations(s)\r\n        this.reset()\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.stroke='blue'\r\n                    x1.style.strokeWidth='5'\r\n                    x1.style.borderRadius='2'\r\n                }, i*delay);\r\n            }\r\n            else if(animations[i].color==='shrinkEdge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.strokeWidth='2'\r\n                    x1.style.borderRadius='0'\r\n                }, i*delay);\r\n            }\r\n            else\r\n            {\r\n                    let x=document.getElementById(`point${animations[i].x}`)\r\n                    setTimeout(() => {\r\n                        x.style.fill=animations[i].color\r\n                    }, i*delay);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle key={\"point\"+idx} id={\"point\"+idx} cx={x.x} cy={x.y} r=\"14\" stroke=\"black\" onClick={(event)=>this.drawLine(event,idx)} strokeWidth=\".5\" style={{fill:\"orange\",transition:'all .2s linear',cursor:'pointer'}} />\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((pt,idx)=>{\r\n            return(\r\n                <text  key={\"index\"+idx} id={\"index\"+idx} fontSize=\"14\" fontFamily=\"Arial\" x={pt.x-4} y={pt.y+4} onClick={(event)=>this.drawLine(event,idx)} style={{fill:\"#fff\",transition:'all .2s linear',cursor:'pointer'}}>{idx}</text>\r\n            )\r\n        })\r\n        var lines=this.state.edges.map((q,idx)=>{\r\n            return(\r\n                <line key={\"edge\"+idx} id={\"edge\"+idx} x1={this.state.points[q.u].x} y1={this.state.points[q.u].y} x2={this.state.points[q.v].x} y2={this.state.points[q.v].y} style={{stroke:'red',strokeWidth:'2',transition:'all .2s linear'}} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n            <center>\r\n            <button onClick={()=>this.bfs(this.state.src)}>BFS</button>\r\n            <button onClick={()=>this.dfs(this.state.src)}>DFS</button>\r\n            <button onClick={()=>this.reset()}>Reset</button>\r\n            <button onClick={()=>this.clear()}>Clear Canvas</button>\r\n            &nbsp;&nbsp;&nbsp;Enter source vertex &nbsp;\r\n            <input type=\"text\" id=\"src\" value={this.state.src} onChange={(e)=>this.changeSrc(e)} />\r\n            </center>\r\n            <svg paintOrder='markers' ref='svg' width={window.innerWidth} height={window.innerHeight*0.9} style={{border:'1px dotted black',backgroundColor:'rgb(251, 250, 255)',cursor:'crosshair'}} onClick={(event)=>this.getMousePosition(event)}>\r\n            {lines}\r\n            {pts}\r\n            {ptsidx}\r\n            \r\n            </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Canvas\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}"]},"metadata":{},"sourceType":"module"}