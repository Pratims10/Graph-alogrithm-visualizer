{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\Graph\\\\graph-algorithm-visualizer\\\\src\\\\components\\\\canvas.js\";\nimport React, { Component } from 'react';\nlet v1 = null,\n    v2 = null;\nlet adj = [];\nvar delay = 1000;\nexport class Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: [],\n      edges: [],\n      src: 0\n    };\n  }\n\n  getMousePosition(event) {\n    let x = event.clientX; //this.refs.svg.style.marginLeft ;\n\n    let y = event.clientY - this.refs.svg.style.marginTop;\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      let x1 = this.state.points[i].x;\n      let y1 = this.state.points[i].y;\n      let dist = (x - x1) * (x - x1) + (y - y1) * (y - y1);\n\n      if (dist <= 600) {\n        //                this.drawLine(event);\n        return;\n      }\n    }\n\n    this.setState(prev => {\n      points: prev.points.push({\n        x: x,\n        y: y\n      });\n    }, function () {\n      adj.push([]);\n    });\n    this.forceUpdate();\n  }\n\n  drawLine(e, idx) {\n    let u = document.getElementById(`point${idx}`);\n    u.style.fill = 'red';\n    if (v1 === null) v1 = idx;else {\n      v2 = idx;\n      u = document.getElementById(`point${v1}`);\n      u.style.fill = 'orange';\n      u = document.getElementById(`point${v2}`);\n      u.style.fill = 'orange';\n\n      for (let i = 0; i < this.state.edges.length; i++) {\n        if (this.state.edges[i].u === v1 && this.state.edges[i].v === v2) {\n          v1 = null;\n          v2 = null;\n          return;\n        } else if (this.state.edges[i].u === v2 && this.state.edges[i].v === v1) {\n          v1 = null;\n          v2 = null;\n          return;\n        }\n      }\n\n      this.setState(prev => {\n        edges: prev.edges.push({\n          u: v1,\n          v: v2\n        });\n      }, function () {\n        adj[v1].push({\n          vertex: v2,\n          edgeNo: this.state.edges.length - 1\n        });\n        adj[v2].push({\n          vertex: v1,\n          edgeNo: this.state.edges.length - 1\n        });\n        v1 = null;\n        v2 = null;\n      });\n      this.forceUpdate();\n    }\n  }\n\n  reset() {\n    for (let i = 0; i < this.state.points.length; i++) {\n      document.getElementById(`point${i}`).style.fill = 'orange';\n    }\n\n    for (let i = 0; i < this.state.edges.length; i++) {\n      document.getElementById(`edge${i}`).style.stroke = 'red';\n    }\n  }\n\n  clear() {\n    this.setState({\n      points: [],\n      edges: []\n    }, function () {\n      v1 = null;\n      v2 = null;\n      adj = [];\n    });\n    this.forceUpdate();\n  } //BFS TRAVERSAL OF GRAPH\n\n\n  bfsAnimations(s) {\n    let animations = [];\n    let vis = [];\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      vis[i] = false;\n    }\n\n    let queue = [];\n    queue.push(s);\n    vis[s] = true;\n\n    while (queue.length !== 0) {\n      var x = queue[0];\n      queue.shift();\n      animations.push({\n        x: x,\n        y: -1,\n        color: 'green'\n      });\n\n      for (let i = 0; i < adj[x].length; i++) {\n        if (vis[adj[x][i].vertex] === false) {\n          vis[adj[x][i].vertex] = true;\n          queue.push(adj[x][i].vertex);\n          animations.push({\n            x: adj[x][i].edgeNo,\n            y: -1,\n            color: 'edge'\n          });\n          animations.push({\n            x: adj[x][i].vertex,\n            y: -1,\n            color: 'blue'\n          });\n        }\n      }\n    }\n\n    return animations;\n  }\n\n  bfs(s) {\n    const animations = this.bfsAnimations(s);\n    let len = animations.length;\n\n    for (let i = 0; i < len; i++) {\n      if (animations[i].color === 'edge') {\n        let x1 = document.getElementById(`edge${animations[i].x}`);\n        setTimeout(() => {\n          x1.style.stroke = 'blue';\n        }, i * delay);\n      } else {\n        let x = document.getElementById(`point${animations[i].x}`);\n        setTimeout(() => {\n          x.style.fill = animations[i].color;\n        }, i * delay);\n      }\n    }\n  } //DFS ALGORITHM\n\n\n  dfsutil(s, vis, animations) {\n    animations.push({\n      x: s,\n      y: -1,\n      color: 'green'\n    });\n    vis[s] = true;\n\n    for (let i = 0; i < adj[s].length; i++) {\n      if (!vis[adj[s][i].vertex]) {\n        animations.push({\n          x: adj[s][i].edgeNo,\n          y: -1,\n          color: 'edge'\n        });\n        animations.push({\n          x: adj[s][i].vertex,\n          y: -1,\n          color: 'blue'\n        });\n        this.dfsutil(adj[s][i].vertex, vis, animations);\n      }\n    }\n  }\n\n  dfsAnimations(s) {\n    var animations = [];\n    let vis = [];\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      vis[i] = false;\n    }\n\n    this.dfsutil(s, vis, animations);\n    return animations;\n  }\n\n  changeSrc(e) {\n    let x = document.getElementById('src').value;\n    this.setState({\n      src: x\n    });\n  }\n\n  dfs(s) {\n    const animations = this.dfsAnimations(s);\n    let len = animations.length;\n\n    for (let i = 0; i < len; i++) {\n      if (animations[i].color === 'edge') {\n        let x1 = document.getElementById(`edge${animations[i].x}`);\n        setTimeout(() => {\n          x1.style.stroke = 'blue';\n        }, i * delay);\n      } else {\n        let x = document.getElementById(`point${animations[i].x}`);\n        setTimeout(() => {\n          x.style.fill = animations[i].color;\n        }, i * delay);\n      }\n    }\n  }\n\n  render() {\n    var pts = this.state.points.map((x, idx) => {\n      return React.createElement(\"circle\", {\n        key: \"point\" + idx,\n        id: \"point\" + idx,\n        cx: x.x,\n        cy: x.y,\n        r: \"15\",\n        stroke: \"black\",\n        onClick: event => this.drawLine(event, idx),\n        strokeWidth: \".5\",\n        style: {\n          fill: \"orange\",\n          zIndex: '1',\n          transition: 'all .2s linear',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      });\n    });\n    var ptsidx = this.state.points.map((pt, idx) => {\n      return React.createElement(\"text\", {\n        key: \"index\" + idx,\n        id: \"index\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        x: pt.x - 4,\n        y: pt.y + 4,\n        onClick: event => this.drawLine(event, idx),\n        style: {\n          zIndex: '1',\n          fill: \"#fff\",\n          transition: 'all .2s linear'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, idx);\n    });\n    var lines = this.state.edges.map((q, idx) => {\n      return React.createElement(\"line\", {\n        key: \"edge\" + idx,\n        id: \"edge\" + idx,\n        x1: this.state.points[q.u].x,\n        y1: this.state.points[q.u].y,\n        x2: this.state.points[q.v].x,\n        y2: this.state.points[q.v].y,\n        style: {\n          stroke: 'red',\n          strokeWidth: '2',\n          zIndex: '-1',\n          transition: 'all .2s linear'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      paintOrder: \"markers\",\n      ref: \"svg\",\n      width: window.innerWidth,\n      height: \"400\",\n      style: {\n        backgroundColor: '#f2f2f2',\n        cursor: 'crosshair'\n      },\n      onClick: event => this.getMousePosition(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, pts, ptsidx, lines), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.bfs(this.state.src),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"BFS\"), React.createElement(\"button\", {\n      onClick: () => this.dfs(this.state.src),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"DFS\"), React.createElement(\"button\", {\n      onClick: () => this.reset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      onClick: () => this.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Clear Canvas\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Enter source vertex\"), React.createElement(\"input\", {\n      value: this.state.src,\n      onChange: e => this.changeSrc(e),\n      type: \"text\",\n      id: \"src\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Canvas;\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["H:/React/Graph/graph-algorithm-visualizer/src/components/canvas.js"],"names":["React","Component","v1","v2","adj","delay","Canvas","constructor","props","state","points","edges","src","getMousePosition","event","x","clientX","y","clientY","refs","svg","style","marginTop","i","length","x1","y1","dist","setState","prev","push","forceUpdate","drawLine","e","idx","u","document","getElementById","fill","v","vertex","edgeNo","reset","stroke","clear","bfsAnimations","s","animations","vis","queue","shift","color","bfs","len","setTimeout","dfsutil","dfsAnimations","changeSrc","value","dfs","render","pts","map","zIndex","transition","cursor","ptsidx","pt","lines","q","strokeWidth","window","innerWidth","backgroundColor","getRandomInt","min","max","Math","ceil","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nlet v1=null,v2=null;\r\nlet adj=[]\r\nvar delay=1000\r\n\r\nexport class Canvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[],\r\n             edges:[],\r\n             src:0\r\n        }\r\n    }\r\n\r\n    getMousePosition(event) { \r\n        let x = event.clientX;//this.refs.svg.style.marginLeft ;\r\n        let y = event.clientY-this.refs.svg.style.marginTop ;\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            let x1=this.state.points[i].x;\r\n            let y1=this.state.points[i].y;\r\n            let dist=(x-x1)*(x-x1)+(y-y1)*(y-y1);\r\n            if(dist<=600)\r\n            {\r\n//                this.drawLine(event);\r\n                return;\r\n            }\r\n        }\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({\r\n                x:x,\r\n                y:y\r\n            })\r\n        },function(){\r\n            adj.push([])\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    drawLine(e,idx){\r\n        let u=document.getElementById(`point${idx}`);\r\n        u.style.fill='red';\r\n        if(v1===null)\r\n        v1=idx;\r\n        else {\r\n            v2=idx;\r\n            u=document.getElementById(`point${v1}`);\r\n            u.style.fill='orange';\r\n            u=document.getElementById(`point${v2}`);\r\n            u.style.fill='orange';\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(this.state.edges[i].u===v1 && this.state.edges[i].v===v2)\r\n                {   v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n                else if(this.state.edges[i].u===v2 && this.state.edges[i].v===v1)\r\n                {\r\n                    v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n            }\r\n            this.setState((prev)=>{\r\n                edges:prev.edges.push({\r\n                    u:v1,\r\n                    v:v2\r\n                })\r\n            },function(){\r\n                adj[v1].push({vertex:v2,edgeNo:this.state.edges.length-1})\r\n                adj[v2].push({vertex:v1,edgeNo:this.state.edges.length-1})\r\n                v1=null\r\n                v2=null\r\n            })\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        for(let i=0;i<this.state.points.length;i++){\r\n            document.getElementById(`point${i}`).style.fill='orange'\r\n        }\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            document.getElementById(`edge${i}`).style.stroke='red'\r\n        }\r\n    }\r\n    clear(){\r\n        this.setState({\r\n            points:[],\r\n            edges:[]\r\n        },function(){\r\n            v1=null\r\n            v2=null\r\n            adj=[]\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n    //BFS TRAVERSAL OF GRAPH\r\n    bfsAnimations(s){\r\n        let animations=[]\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            vis[i]=false\r\n        }\r\n        let queue=[]\r\n        queue.push(s)\r\n        vis[s]=true;\r\n        while(queue.length!==0)\r\n        {\r\n            var x=queue[0]\r\n            queue.shift()\r\n            animations.push({\r\n                x:x,\r\n                y:-1,\r\n                color:'green'\r\n            })\r\n            for(let i=0;i<adj[x].length;i++)\r\n            {\r\n                if(vis[adj[x][i].vertex]===false)\r\n                {\r\n                    vis[adj[x][i].vertex]=true;\r\n                    queue.push(adj[x][i].vertex)\r\n                    animations.push({\r\n                        x:adj[x][i].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:adj[x][i].vertex,\r\n                        y:-1,\r\n                        color:'blue'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return animations\r\n    }\r\n\r\n    bfs(s){\r\n        const animations=this.bfsAnimations(s)\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.stroke='blue'\r\n                }, i*delay);\r\n            }\r\n            else\r\n            {\r\n                    let x=document.getElementById(`point${animations[i].x}`)\r\n                    setTimeout(() => {\r\n                        x.style.fill=animations[i].color\r\n                    }, i*delay);\r\n            }\r\n        }\r\n    }\r\n\r\n    //DFS ALGORITHM\r\n    dfsutil(s,vis,animations){\r\n        animations.push({\r\n            x:s,\r\n            y:-1,\r\n            color:'green'\r\n        })\r\n        vis[s]=true\r\n        for(let i=0;i<adj[s].length;i++)\r\n        {\r\n            if(!vis[adj[s][i].vertex])\r\n            {\r\n                animations.push({\r\n                    x:adj[s][i].edgeNo,\r\n                    y:-1,\r\n                    color:'edge'\r\n                })\r\n                animations.push({\r\n                    x:adj[s][i].vertex,\r\n                    y:-1,\r\n                    color:'blue'\r\n                })\r\n                this.dfsutil(adj[s][i].vertex,vis,animations)\r\n            }\r\n        }\r\n    }\r\n\r\n    dfsAnimations(s){\r\n        var animations=[]\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            vis[i]=false\r\n        }\r\n        this.dfsutil(s,vis,animations)\r\n        return animations\r\n    }\r\n\r\n    changeSrc(e){\r\n        let x=document.getElementById('src').value\r\n        this.setState({\r\n            src:x\r\n        })\r\n    }\r\n    dfs(s){\r\n        const animations=this.dfsAnimations(s)\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge')\r\n            {\r\n                let x1=document.getElementById(`edge${animations[i].x}`)\r\n                setTimeout(() => {\r\n                    x1.style.stroke='blue'\r\n                }, i*delay);\r\n            }\r\n            else\r\n            {\r\n                    let x=document.getElementById(`point${animations[i].x}`)\r\n                    setTimeout(() => {\r\n                        x.style.fill=animations[i].color\r\n                    }, i*delay);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle key={\"point\"+idx} id={\"point\"+idx} cx={x.x} cy={x.y} r=\"15\" stroke=\"black\" onClick={(event)=>this.drawLine(event,idx)} strokeWidth=\".5\" style={{fill:\"orange\",zIndex:'1',transition:'all .2s linear',cursor:'pointer'}} />\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((pt,idx)=>{\r\n            return(\r\n                <text  key={\"index\"+idx} id={\"index\"+idx} fontSize=\"14\" fontFamily=\"Arial\" x={pt.x-4} y={pt.y+4} onClick={(event)=>this.drawLine(event,idx)} style={{zIndex:'1',fill:\"#fff\",transition:'all .2s linear'}}>{idx}</text>\r\n            )\r\n        })\r\n        var lines=this.state.edges.map((q,idx)=>{\r\n            return(\r\n                <line key={\"edge\"+idx} id={\"edge\"+idx} x1={this.state.points[q.u].x} y1={this.state.points[q.u].y} x2={this.state.points[q.v].x} y2={this.state.points[q.v].y} style={{stroke:'red',strokeWidth:'2',zIndex:'-1',transition:'all .2s linear'}} />\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n            <svg paintOrder='markers' ref='svg' width={window.innerWidth} height=\"400\" style={{backgroundColor: '#f2f2f2',cursor:'crosshair'}} onClick={(event)=>this.getMousePosition(event)}>\r\n            {pts}\r\n            {ptsidx}\r\n            {lines}\r\n            </svg>\r\n            <br/>\r\n            <button onClick={()=>this.bfs(this.state.src)}>BFS</button>\r\n            <button onClick={()=>this.dfs(this.state.src)}>DFS</button>\r\n            <button onClick={()=>this.reset()}>Reset</button>\r\n            <button onClick={()=>this.clear()}>Clear Canvas</button>\r\n            <p>Enter source vertex</p>\r\n            <input value={this.state.src} onChange={(e)=>this.changeSrc(e)} type=\"text\" id=\"src\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Canvas\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}"]},"metadata":{},"sourceType":"module"}