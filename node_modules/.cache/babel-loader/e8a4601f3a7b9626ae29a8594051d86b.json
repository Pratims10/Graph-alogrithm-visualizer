{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\Graph\\\\graph-algorithm-visualizer\\\\src\\\\components\\\\canvas.js\";\nimport React, { Component } from 'react';\nexport class Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: []\n    };\n  }\n\n  getMousePosition(event) {\n    let x = event.clientX - 430; //this.refs.svg.style.marginLeft ;\n\n    let y = event.clientY - this.refs.svg.style.marginTop;\n    this.setState(prev => {\n      points: prev.points.push({\n        x: x,\n        y: y\n      });\n    });\n    console.log(this.state.points);\n    this.forceUpdate();\n  }\n\n  render() {\n    var pts = this.state.points.map(x => {\n      return React.createElement(\"circle\", {\n        cx: x.x,\n        cy: x.y,\n        r: \"10\",\n        stroke: \"black\",\n        \"stroke-width\": \"1\",\n        fill: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    });\n    console.log(pts);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      ref: \"svg\",\n      width: \"500\",\n      height: \"400\",\n      style: {\n        backgroundColor: 'rgb(215, 201, 248)',\n        marginTop: '100'\n      },\n      onMouseDown: event => this.getMousePosition(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, pts));\n  }\n\n}\nexport default Canvas;","map":{"version":3,"sources":["H:/React/Graph/graph-algorithm-visualizer/src/components/canvas.js"],"names":["React","Component","Canvas","constructor","props","state","points","getMousePosition","event","x","clientX","y","clientY","refs","svg","style","marginTop","setState","prev","push","console","log","forceUpdate","render","pts","map","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACRC,MAAAA,MAAM,EAAC;AADC,KAAb;AAGH;;AAEDC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,QAAIC,CAAC,GAAGD,KAAK,CAACE,OAAN,GAAc,GAAtB,CADoB,CACM;;AAC1B,QAAIC,CAAC,GAAGH,KAAK,CAACI,OAAN,GAAc,KAAKC,IAAL,CAAUC,GAAV,CAAcC,KAAd,CAAoBC,SAA1C;AACA,SAAKC,QAAL,CAAeC,IAAD,IAAQ;AAClBZ,MAAAA,MAAM,EAACY,IAAI,CAACZ,MAAL,CAAYa,IAAZ,CAAiB;AACpBV,QAAAA,CAAC,EAACA,CADkB;AAEpBE,QAAAA,CAAC,EAACA;AAFkB,OAAjB;AAIV,KALD;AAMAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,MAAvB;AACA,SAAKgB,WAAL;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAC,KAAKnB,KAAL,CAAWC,MAAX,CAAkBmB,GAAlB,CAAuBhB,CAAD,IAAK;AAC/B,aACA;AAAQ,QAAA,EAAE,EAAEA,CAAC,CAACA,CAAd;AAAiB,QAAA,EAAE,EAAEA,CAAC,CAACE,CAAvB;AAA0B,QAAA,CAAC,EAAC,IAA5B;AAAiC,QAAA,MAAM,EAAC,OAAxC;AAAgD,wBAAa,GAA7D;AAAiE,QAAA,IAAI,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAGH,KAJO,CAAR;AAKAS,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAC,KAAT;AAAe,MAAA,KAAK,EAAC,KAArB;AAA2B,MAAA,MAAM,EAAC,KAAlC;AAAwC,MAAA,KAAK,EAAE;AAACE,QAAAA,eAAe,EAAE,oBAAlB;AAAuCV,QAAAA,SAAS,EAAC;AAAjD,OAA/C;AAAwG,MAAA,WAAW,EAAGR,KAAD,IAAS,KAAKD,gBAAL,CAAsBC,KAAtB,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCgB,GADD,CADA,CADJ;AAOH;;AAnCiC;AAsCtC,eAAetB,MAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Canvas extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[]\r\n        }\r\n    }\r\n    \r\n    getMousePosition(event) { \r\n        let x = event.clientX-430;//this.refs.svg.style.marginLeft ;\r\n        let y = event.clientY-this.refs.svg.style.marginTop ;\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({\r\n                x:x,\r\n                y:y\r\n            })\r\n        })\r\n        console.log(this.state.points)\r\n        this.forceUpdate();\r\n    }\r\n    render() {\r\n        var pts=this.state.points.map((x)=>{\r\n            return(\r\n            <circle cx={x.x} cy={x.y} r=\"10\" stroke=\"black\" stroke-width=\"1\" fill=\"green\" />\r\n            )\r\n        })\r\n        console.log(pts);\r\n        return (\r\n            <div>\r\n            <svg ref='svg' width=\"500\" height=\"400\" style={{backgroundColor: 'rgb(215, 201, 248)',marginTop:'100'}} onMouseDown={(event)=>this.getMousePosition(event)} >\r\n            {pts}\r\n            </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Canvas\r\n"]},"metadata":{},"sourceType":"module"}