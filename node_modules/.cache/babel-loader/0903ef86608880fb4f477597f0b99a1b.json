{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\Graph\\\\graph-algorithm-visualizer\\\\src\\\\components\\\\ShortestPath.js\";\nimport React, { Component } from 'react';\nimport './graph.css';\nlet v1 = null,\n    v2 = null;\nlet adj = [];\nvar delay = 500;\nlet weights = [];\nvar r = 14;\nvar INT_MAX = 100000;\nlet parent = [];\nlet color1 = 'rgb(0, 204, 0)';\nlet done = false;\nlet timeouts = [];\n\nfunction makeDraggable(evt) {\n  alert(\"ds\");\n  var svg = evt.target;\n  svg.addEventListener('mousedown', startDrag);\n  svg.addEventListener('mousemove', drag);\n  svg.addEventListener('mouseup', endDrag);\n  svg.addEventListener('mouseleave', endDrag);\n  svg.addEventListener('touchstart', startDrag);\n  svg.addEventListener('touchmove', drag);\n  svg.addEventListener('touchend', endDrag);\n  svg.addEventListener('touchleave', endDrag);\n  svg.addEventListener('touchcancel', endDrag);\n\n  function getMousePosition(evt) {\n    var CTM = svg.getScreenCTM();\n\n    if (evt.touches) {\n      evt = evt.touches[0];\n    }\n\n    return {\n      x: (evt.clientX - CTM.e) / CTM.a,\n      y: (evt.clientY - CTM.f) / CTM.d\n    };\n  }\n\n  var selectedElement, offset, transform;\n\n  function initialiseDragging(evt) {\n    offset = getMousePosition(evt); // Make sure the first transform on the element is a translate transform\n\n    var transforms = selectedElement.transform.baseVal;\n\n    if (transforms.length === 0 || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {\n      // Create an transform that translates by (0, 0)\n      var translate = svg.createSVGTransform();\n      translate.setTranslate(0, 0);\n      selectedElement.transform.baseVal.insertItemBefore(translate, 0);\n    } // Get initial translation\n\n\n    transform = transforms.getItem(0);\n    offset.x -= transform.matrix.e;\n    offset.y -= transform.matrix.f;\n  }\n\n  function startDrag(evt) {\n    if (evt.target.classList.contains('draggable')) {\n      selectedElement = evt.target;\n      initialiseDragging(evt);\n    } else if (evt.target.parentNode.classList.contains('draggable-group')) {\n      selectedElement = evt.target.parentNode;\n      initialiseDragging(evt);\n    }\n  }\n\n  function drag(evt) {\n    if (selectedElement) {\n      evt.preventDefault();\n      var coord = getMousePosition(evt);\n      transform.setTranslate(coord.x - offset.x, coord.y - offset.y);\n    }\n  }\n\n  function endDrag(evt) {\n    selectedElement = false;\n  }\n}\n\nexport class ShortestPath extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: [],\n      edges: [],\n      src: 0\n    };\n  }\n\n  componentDidMount() {//this.generateRandomGraph()\n  }\n\n  randomWeights() {\n    for (let i = 0; i < this.state.edges.length; i++) weights[i] = getRandomInt(1, 50);\n\n    this.reset();\n    this.forceUpdate();\n  }\n\n  addWeights() {\n    weights.push(getRandomInt(1, 50));\n    this.forceUpdate();\n  }\n\n  getMousePosition(event) {\n    this.reset();\n    done = false;\n    let x = event.clientX - this.refs.svg.getBoundingClientRect().left;\n    let y = event.clientY - this.refs.svg.getBoundingClientRect().top;\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      let x1 = this.state.points[i].x;\n      let y1 = this.state.points[i].y;\n      let dist = (x - x1) * (x - x1) + (y - y1) * (y - y1);\n      if (dist <= 1000) return false;\n    }\n\n    this.setState(prev => {\n      points: prev.points.push({\n        x: x,\n        y: y\n      });\n    }, function () {\n      adj.push([]);\n    });\n    this.forceUpdate();\n  }\n\n  changeSrc(e) {\n    this.reset();\n    done = false;\n    let x = document.getElementById('src').value;\n    this.setState({\n      src: x\n    });\n  }\n\n  drawLine(idx) {\n    this.reset();\n    done = false;\n    let u = document.getElementById(`point${idx}`);\n    u.style.fill = 'red';\n    if (v1 === null) v1 = idx;else {\n      v2 = idx;\n      u = document.getElementById(`point${v1}`);\n      u.style.fill = '#000';\n      u = document.getElementById(`point${v2}`);\n      u.style.fill = '#000';\n\n      for (let i = 0; i < this.state.edges.length; i++) {\n        if (this.state.edges[i].u === v1 && this.state.edges[i].v === v2) {\n          v1 = null;\n          v2 = null;\n          return;\n        } else if (this.state.edges[i].u === v2 && this.state.edges[i].v === v1) {\n          v1 = null;\n          v2 = null;\n          return;\n        }\n      }\n\n      if (v1 === v2) {\n        v1 = null;\n        v2 = null;\n        return;\n      }\n\n      this.setState(prev => {\n        edges: prev.edges.push({\n          u: v1,\n          v: v2\n        });\n      }, function () {\n        this.addWeights();\n        adj[v1].push({\n          vertex: v2,\n          edgeNo: this.state.edges.length - 1\n        });\n        adj[v2].push({\n          vertex: v1,\n          edgeNo: this.state.edges.length - 1\n        });\n        v1 = null;\n        v2 = null;\n      });\n      this.forceUpdate();\n    }\n  }\n\n  reset() {\n    done = false;\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      if (document.getElementById(`point${i}`).style.fill !== 'red') document.getElementById(`point${i}`).style.fill = '#000';\n    }\n\n    for (let i = 0; i < this.state.edges.length; i++) {\n      document.getElementById(`edge${i}`).style.stroke = 'red';\n      document.getElementById(`weight${i}`).style.fill = 'black';\n    }\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      document.getElementById(`dist${i}`).textContent = 'âˆž';\n    }\n\n    parent = [];\n    this.forceUpdate();\n  }\n\n  clear() {\n    done = false;\n    this.setState({\n      points: [],\n      edges: [],\n      dist: []\n    }, function () {\n      v1 = null;\n      v2 = null;\n      adj = [];\n      weights = [];\n      parent = [];\n    });\n    this.forceUpdate();\n  } //GENERATE RANDOM GRAPH\n\n\n  generateRandomGraph() {\n    let lx = this.refs.svg.getBoundingClientRect().left + 15;\n    let rx = this.refs.svg.getBoundingClientRect().left + this.refs.svg.clientWidth - 15;\n    let ly = this.refs.svg.getBoundingClientRect().top + 15;\n    let ry = this.refs.svg.getBoundingClientRect().top + this.refs.svg.clientHeight - 15;\n    let n = getRandomInt(5, 12);\n    let i;\n\n    for (i = 1; i <= n; i++) {\n      let flag;\n      setTimeout(() => {\n        flag = this.getMousePosition({\n          clientX: getRandomInt(lx, rx),\n          clientY: getRandomInt(ly, ry)\n        });\n      }, i * delay);\n      if (flag === false) i--;\n    }\n\n    for (let j = 1; j <= 1.1 * n; j++) {\n      setTimeout(() => {\n        let aq = getRandomInt(0, n - 1);\n        this.drawLine(aq);\n        aq = getRandomInt(0, n - 1);\n        this.drawLine(\" \" + aq);\n      }, i * delay);\n      i++;\n    }\n  }\n\n  showPath(s) {\n    if (window.location.pathname === '/PrimMST') return;\n    if (done === false) return;\n    let i = parent[s];\n    document.getElementById(`point${s}`).style.fill = 'yellow';\n    document.getElementById(`index${s}`).style.fill = 'black';\n    if (typeof i === \"undefined\") return;\n\n    while (i.vertex !== -1) {\n      document.getElementById(`edge${i.edgeNo}`).style.stroke = 'yellow';\n      document.getElementById(`point${i.vertex}`).style.fill = 'yellow';\n      document.getElementById(`index${i.vertex}`).style.fill = 'black';\n      i = parent[i.vertex];\n    }\n  }\n\n  removePath(s) {\n    if (window.location.pathname === '/PrimMST') return;\n    if (done === false) return;\n    let i = parent[s];\n    document.getElementById(`point${s}`).style.fill = color1;\n    document.getElementById(`index${s}`).style.fill = 'white';\n    if (typeof i === \"undefined\") return;\n\n    while (i.vertex !== -1) {\n      document.getElementById(`edge${i.edgeNo}`).style.stroke = 'blue';\n      document.getElementById(`point${i.vertex}`).style.fill = color1;\n      document.getElementById(`index${i.vertex}`).style.fill = 'white';\n      i = parent[i.vertex];\n    }\n  } //DIJKSTRA'S SHORTEST PATH ALGORITHM\n\n\n  minDist(dist, sptSet) {\n    // Initialize min value \n    let min = INT_MAX,\n        min_index;\n\n    for (let v = 0; v < this.state.points.length; v++) if (sptSet[v] === false && dist[v] <= min) {\n      min = dist[v];\n      min_index = v;\n    }\n\n    return min_index;\n  }\n\n  dijkstraAnimations(s) {\n    this.reset();\n    let ar = [];\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      ar.push([]);\n\n      for (let j = 0; j < this.state.points.length; j++) ar[i].push(0);\n    } //forming adj matrix\n\n\n    for (let i = 0; i < this.state.edges.length; i++) {\n      ar[this.state.edges[i].u][this.state.edges[i].v] = {\n        wt: weights[i],\n        edgeNo: i\n      };\n      ar[this.state.edges[i].v][this.state.edges[i].u] = {\n        wt: weights[i],\n        edgeNo: i\n      };\n    }\n\n    let vis = [];\n\n    for (let i = 0; i < this.state.points.length; i++) vis[i] = false;\n\n    let animations = [];\n    let dist = [];\n    parent = [];\n\n    for (let i = 0; i < this.state.points.length; i++) dist[i] = 100000;\n\n    dist[s] = 0;\n    parent[s] = {\n      vertex: -1,\n      edgeNo: -1\n    };\n    animations.push({\n      x: s,\n      y: 0,\n      color: 'setdist'\n    });\n\n    for (let it = 0; it < this.state.points.length; it++) {\n      let u = this.minDist(dist, vis);\n      if (dist[u] === INT_MAX) return animations;\n      vis[u] = true;\n      animations.push({\n        x: u,\n        y: -1,\n        color: 'confirmdist'\n      });\n\n      for (let v = 0; v < this.state.points.length; v++) {\n        if (!vis[v] && ar[u][v].wt && dist[u] + ar[u][v].wt < dist[v]) {\n          parent[v] = {\n            vertex: u,\n            edgeNo: ar[u][v].edgeNo\n          };\n          dist[v] = dist[u] + ar[u][v].wt;\n          animations.push({\n            x: ar[u][v].edgeNo,\n            y: -1,\n            color: 'edge'\n          });\n          animations.push({\n            x: ar[u][v].edgeNo,\n            y: -1,\n            color: 'shrinkEdge'\n          });\n          animations.push({\n            x: v,\n            y: dist[v],\n            color: 'setdist'\n          });\n        }\n      }\n    }\n\n    return animations;\n  }\n\n  dijkstra(s) {\n    if (s >= this.state.points.length) return;\n\n    if (s === \"\" && s !== '0') {\n      alert(\"Enter a source vertex\");\n      return;\n    }\n\n    for (let i = 0; i < s.length; i++) {\n      if (s[i] !== '0' && s[i] !== '1' && s[i] !== '2' && s[i] !== '3' && s[i] !== '4' && s[i] !== '5' && s[i] !== '6' && s[i] !== '7' && s[i] !== '8' && s[i] !== '9') {\n        alert(\"Enter an integer as source vertex\");\n        return;\n      }\n    }\n\n    s = parseInt(s);\n    const animations = this.dijkstraAnimations(s);\n    let len = animations.length;\n\n    for (let i = 0; i < len; i++) {\n      if (animations[i].color === 'edge') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`edge${animations[i].x}`);\n          q.style.stroke = 'blue';\n          q.style.strokeWidth = '5';\n        }, i * delay);\n        timeouts.push(tm);\n      } else if (animations[i].color === 'shrinkEdge') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`edge${animations[i].x}`);\n          q.style.stroke = 'blue';\n          q.style.strokeWidth = '2';\n        }, i * delay);\n        timeouts.push(tm);\n      } else if (animations[i].color === 'setdist') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`point${animations[i].x}`);\n          q.style.fill = 'blue';\n          q = document.getElementById(`dist${animations[i].x}`);\n          q.textContent = animations[i].y;\n        }, i * delay);\n        timeouts.push(tm);\n      } else {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`point${animations[i].x}`);\n          q.style.fill = color1;\n        }, i * delay);\n        timeouts.push(tm);\n      }\n    }\n\n    done = true;\n  } //PRIM'S ALGORITHM\n\n\n  minDist(dist, sptSet) {\n    // Initialize min value \n    let min = INT_MAX,\n        min_index;\n\n    for (let v = 0; v < this.state.points.length; v++) if (sptSet[v] === false && dist[v] <= min) {\n      min = dist[v];\n      min_index = v;\n    }\n\n    return min_index;\n  }\n\n  primAnimations(s) {\n    this.reset();\n    let ar = [];\n\n    for (let i = 0; i < this.state.points.length; i++) {\n      ar.push([]);\n\n      for (let j = 0; j < this.state.points.length; j++) ar[i].push(0);\n    } //forming adj matrix\n\n\n    for (let i = 0; i < this.state.edges.length; i++) {\n      ar[this.state.edges[i].u][this.state.edges[i].v] = {\n        wt: weights[i],\n        edgeNo: i\n      };\n      ar[this.state.edges[i].v][this.state.edges[i].u] = {\n        wt: weights[i],\n        edgeNo: i\n      };\n    }\n\n    let vis = [];\n\n    for (let i = 0; i < this.state.points.length; i++) vis[i] = false;\n\n    let animations = [];\n    let dist = [];\n    parent = [];\n\n    for (let i = 0; i < this.state.points.length; i++) dist[i] = 100000;\n\n    dist[s] = 0;\n    parent[s] = {\n      vertex: -1,\n      edgeNo: -1\n    };\n    animations.push({\n      x: s,\n      y: 0,\n      color: 'setdist'\n    });\n\n    for (let it = 0; it < this.state.points.length; it++) {\n      let u = this.minDist(dist, vis);\n      if (dist[u] === INT_MAX) return [];\n      vis[u] = true;\n      animations.push({\n        x: u,\n        y: parent[u].edgeNo,\n        color: 'confirmdist'\n      });\n\n      for (let v = 0; v < this.state.points.length; v++) {\n        if (!vis[v] && ar[u][v].wt && ar[u][v].wt < dist[v]) {\n          parent[v] = {\n            vertex: u,\n            edgeNo: ar[u][v].edgeNo\n          };\n          dist[v] = ar[u][v].wt;\n          animations.push({\n            x: ar[u][v].edgeNo,\n            y: -1,\n            color: 'edge'\n          });\n          animations.push({\n            x: ar[u][v].edgeNo,\n            y: -1,\n            color: 'shrinkEdge'\n          });\n          animations.push({\n            x: v,\n            y: dist[v],\n            color: 'setdist'\n          });\n        }\n      }\n    }\n\n    return animations;\n  }\n\n  prim(s) {\n    if (s >= this.state.points.length) return;\n\n    if (s === \"\" && s !== '0') {\n      alert(\"Enter a source vertex\");\n      return;\n    }\n\n    for (let i = 0; i < s.length; i++) {\n      if (s[i] !== '0' && s[i] !== '1' && s[i] !== '2' && s[i] !== '3' && s[i] !== '4' && s[i] !== '5' && s[i] !== '6' && s[i] !== '7' && s[i] !== '8' && s[i] !== '9') {\n        alert(\"Enter an integer as source vertex\");\n        return;\n      }\n    }\n\n    s = parseInt(s);\n    const animations = this.primAnimations(s);\n    let len = animations.length;\n    if (len === 0) return;\n\n    for (let i = 0; i < len; i++) {\n      if (animations[i].color === 'edge') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`edge${animations[i].x}`);\n          q.style.stroke = 'blue';\n          q.style.strokeWidth = '5';\n        }, i * delay);\n        timeouts.push(tm);\n      } else if (animations[i].color === 'shrinkEdge') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`edge${animations[i].x}`);\n          q.style.stroke = 'blue';\n          q.style.strokeWidth = '2';\n        }, i * delay);\n        timeouts.push(tm);\n      } else if (animations[i].color === 'setdist') {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`point${animations[i].x}`);\n          q.style.fill = 'blue';\n          q = document.getElementById(`dist${animations[i].x}`);\n          q.textContent = animations[i].y;\n        }, i * delay);\n        timeouts.push(tm);\n      } else {\n        let tm = setTimeout(() => {\n          let q = document.getElementById(`point${animations[i].x}`);\n          q.style.fill = color1;\n          if (animations[i].y != -1) document.getElementById(`edge${animations[i].y}`).style.stroke = color1;\n        }, i * delay);\n        timeouts.push(tm);\n      }\n    }\n\n    let tm = setTimeout(() => {\n      for (let i = 0; i < this.state.edges.length; i++) {\n        if (document.getElementById(`edge${i}`).style.stroke !== color1) {\n          document.getElementById(`edge${i}`).style.stroke = '#bfbfbf';\n          document.getElementById(`weight${i}`).style.fill = '#bfbfbf';\n        }\n      }\n    }, len * delay);\n    timeouts.push(tm);\n  }\n\n  render() {\n    var pts = this.state.points.map((x, idx) => {\n      return React.createElement(\"circle\", {\n        key: \"point\" + idx,\n        id: \"point\" + idx,\n        cx: x.x,\n        cy: x.y,\n        r: r,\n        stroke: \"black\",\n        onClick: event => this.drawLine(idx),\n        strokeWidth: \"2\",\n        style: {\n          fill: \"#000\",\n          transition: 'all .2s linear',\n          cursor: 'pointer'\n        },\n        onMouseOver: () => this.showPath(idx),\n        onMouseOut: () => this.removePath(idx),\n        onload: makeDraggable(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      });\n    });\n    var ptsidx = this.state.points.map((pt, idx) => {\n      return React.createElement(\"text\", {\n        key: \"index\" + idx,\n        id: \"index\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        x: pt.x - 4,\n        y: pt.y + 4,\n        onClick: event => this.drawLine(idx),\n        style: {\n          fill: \"#fff\",\n          transition: 'all .2s linear',\n          cursor: 'pointer'\n        },\n        onMouseOver: () => this.showPath(idx),\n        onMouseOut: () => this.removePath(idx),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, idx);\n    });\n    var lines = this.state.edges.map((q, idx) => {\n      return React.createElement(\"line\", {\n        key: \"edge\" + idx,\n        id: \"edge\" + idx,\n        x1: this.state.points[q.u].x,\n        y1: this.state.points[q.u].y,\n        x2: this.state.points[q.v].x,\n        y2: this.state.points[q.v].y,\n        style: {\n          stroke: 'red',\n          strokeWidth: '2',\n          zIndex: '-1',\n          transition: 'all .2s linear'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      });\n    });\n    var edgeWeights = this.state.edges.map((edge, idx) => {\n      return React.createElement(\"text\", {\n        key: \"weight\" + idx,\n        id: \"weight\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        fill: \"#000\",\n        x: (this.state.points[edge.u].x + this.state.points[edge.v].x) / 2.0,\n        y: (this.state.points[edge.u].y + this.state.points[edge.v].y) / 2.0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, weights[idx]);\n    });\n    var dists = this.state.points.map((x, idx) => {\n      return React.createElement(\"text\", {\n        key: \"dist\" + idx,\n        id: \"dist\" + idx,\n        fontSize: \"14\",\n        fontFamily: \"Arial\",\n        fill: \"#000\",\n        x: x.x + r + 2,\n        y: x.y + r + 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"\\u221E\");\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, window.location.pathname === '/dijkstra' ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"Dijkstra's Shortest Path Algorithm\") : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"Prim's Minimal Spanning Tree Algorithm\"), window.location.pathname === '/dijkstra' ? React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.dijkstra(this.state.src),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, \"Dijkstra's Algorithm\") : React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.prim(this.state.src),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, \"Prim's Algorithm\"), React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.randomWeights(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    }, \"Randomize edge weights\"), React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.reset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608\n      },\n      __self: this\n    }, \"Reset\"), React.createElement(\"button\", {\n      className: \"button button4\",\n      onClick: () => this.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, \"Clear Canvas\"), React.createElement(\"text\", {\n      style: {\n        fontFamily: 'Georgia'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }, \"\\xA0\\xA0\\xA0Source/Starting vertex\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"src\",\n      value: this.state.src,\n      style: {\n        width: '25px'\n      },\n      onChange: e => this.changeSrc(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611\n      },\n      __self: this\n    })), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      paintOrder: \"markers\",\n      ref: \"svg\",\n      width: window.innerWidth * .995,\n      height: window.innerHeight * .88,\n      style: {\n        border: '2px solid black',\n        backgroundColor: '#dddddd',\n        cursor: 'crosshair'\n      },\n      onClick: event => this.getMousePosition(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, window.location.pathname === '/dijkstra' ? React.createElement(\"rect\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, \"1.Click to plot some points. 2.Connect two points by clicking on them consecutively. 3.Run the algorithm. 4.Hover on any vertex to see the shortest path from the root vertex.\")) : React.createElement(\"rect\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616\n      },\n      __self: this\n    }, \"1.Click to plot some points. 2.Connect two points by clicking on them consecutively. 3.Run the algo and Enjoy!!!\")), dists, edgeWeights, lines, pts, ptsidx)));\n  }\n\n}\nexport default ShortestPath;\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"sources":["H:/React/Graph/graph-algorithm-visualizer/src/components/ShortestPath.js"],"names":["React","Component","v1","v2","adj","delay","weights","r","INT_MAX","parent","color1","done","timeouts","makeDraggable","evt","alert","svg","target","addEventListener","startDrag","drag","endDrag","getMousePosition","CTM","getScreenCTM","touches","x","clientX","e","a","y","clientY","f","d","selectedElement","offset","transform","initialiseDragging","transforms","baseVal","length","getItem","type","SVGTransform","SVG_TRANSFORM_TRANSLATE","translate","createSVGTransform","setTranslate","insertItemBefore","matrix","classList","contains","parentNode","preventDefault","coord","ShortestPath","constructor","props","state","points","edges","src","componentDidMount","randomWeights","i","getRandomInt","reset","forceUpdate","addWeights","push","event","refs","getBoundingClientRect","left","top","x1","y1","dist","setState","prev","changeSrc","document","getElementById","value","drawLine","idx","u","style","fill","v","vertex","edgeNo","stroke","textContent","clear","generateRandomGraph","lx","rx","clientWidth","ly","ry","clientHeight","n","flag","setTimeout","j","aq","showPath","s","window","location","pathname","removePath","minDist","sptSet","min","min_index","dijkstraAnimations","ar","wt","vis","animations","color","it","dijkstra","parseInt","len","tm","q","strokeWidth","primAnimations","prim","render","pts","map","transition","cursor","ptsidx","pt","lines","zIndex","edgeWeights","edge","dists","fontFamily","width","innerWidth","innerHeight","border","backgroundColor","max","Math","ceil","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './graph.css'\r\n\r\nlet v1=null,v2=null\r\nlet adj=[]\r\nvar delay=500\r\nlet weights=[]\r\nvar r=14\r\nvar INT_MAX=100000\r\nlet parent=[]\r\nlet color1='rgb(0, 204, 0)';\r\nlet done=false\r\nlet timeouts=[]\r\n\r\nfunction makeDraggable(evt) {\r\n    alert(\"ds\");\r\n    var svg = evt.target;\r\n    svg.addEventListener('mousedown', startDrag);\r\n    svg.addEventListener('mousemove', drag);\r\n    svg.addEventListener('mouseup', endDrag);\r\n    svg.addEventListener('mouseleave', endDrag);\r\n    svg.addEventListener('touchstart', startDrag);\r\n    svg.addEventListener('touchmove', drag);\r\n    svg.addEventListener('touchend', endDrag);\r\n    svg.addEventListener('touchleave', endDrag);\r\n    svg.addEventListener('touchcancel', endDrag);\r\n    function getMousePosition(evt) {\r\n      var CTM = svg.getScreenCTM();\r\n      if (evt.touches) { evt = evt.touches[0]; }\r\n      return {\r\n        x: (evt.clientX - CTM.e) / CTM.a,\r\n        y: (evt.clientY - CTM.f) / CTM.d\r\n      };\r\n    }\r\n    var selectedElement, offset, transform;\r\n    function initialiseDragging(evt) {\r\n        offset = getMousePosition(evt);\r\n        // Make sure the first transform on the element is a translate transform\r\n        var transforms = selectedElement.transform.baseVal;\r\n        if (transforms.length === 0 || transforms.getItem(0).type !== SVGTransform.SVG_TRANSFORM_TRANSLATE) {\r\n          // Create an transform that translates by (0, 0)\r\n          var translate = svg.createSVGTransform();\r\n          translate.setTranslate(0, 0);\r\n          selectedElement.transform.baseVal.insertItemBefore(translate, 0);\r\n        }\r\n        // Get initial translation\r\n        transform = transforms.getItem(0);\r\n        offset.x -= transform.matrix.e;\r\n        offset.y -= transform.matrix.f;\r\n    }\r\n    function startDrag(evt) {\r\n      if (evt.target.classList.contains('draggable')) {\r\n        selectedElement = evt.target;\r\n        initialiseDragging(evt);\r\n      } else if (evt.target.parentNode.classList.contains('draggable-group')) {\r\n        selectedElement = evt.target.parentNode;\r\n        initialiseDragging(evt);\r\n      }\r\n    }\r\n    function drag(evt) {\r\n      if (selectedElement) {\r\n        evt.preventDefault();\r\n        var coord = getMousePosition(evt);\r\n        transform.setTranslate(coord.x - offset.x, coord.y - offset.y);\r\n      }\r\n    }\r\n    function endDrag(evt) {\r\n      selectedElement = false;\r\n    }\r\n  }\r\n\r\nexport class ShortestPath extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             points:[],\r\n             edges:[],\r\n             src:0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n      //this.generateRandomGraph()\r\n    }\r\n    randomWeights(){\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        weights[i]=getRandomInt(1,50);\r\n        this.reset()\r\n        this.forceUpdate();\r\n    }\r\n    addWeights()\r\n    {\r\n        weights.push(getRandomInt(1,50))\r\n        this.forceUpdate()\r\n    }\r\n    getMousePosition(event)\r\n    {\r\n        this.reset()\r\n        done=false\r\n        let x = event.clientX-this.refs.svg.getBoundingClientRect().left\r\n        let y = event.clientY-this.refs.svg.getBoundingClientRect().top\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            let x1=this.state.points[i].x;\r\n            let y1=this.state.points[i].y;\r\n            let dist=(x-x1)*(x-x1)+(y-y1)*(y-y1);\r\n            if(dist<=1000)\r\n                return false;\r\n        }\r\n        this.setState((prev)=>{\r\n            points:prev.points.push({x:x,y:y})\r\n        },function(){\r\n            adj.push([])\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeSrc(e){\r\n        this.reset()\r\n        done=false\r\n        let x=document.getElementById('src').value\r\n        this.setState({\r\n            src:x\r\n        })\r\n    }\r\n\r\n    drawLine(idx){\r\n        this.reset()\r\n        done=false\r\n        let u=document.getElementById(`point${idx}`);\r\n        u.style.fill='red';\r\n        if(v1===null)\r\n        v1=idx;\r\n        else {\r\n            v2=idx;\r\n            u=document.getElementById(`point${v1}`);\r\n            u.style.fill='#000';\r\n            u=document.getElementById(`point${v2}`);\r\n            u.style.fill='#000';\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(this.state.edges[i].u===v1 && this.state.edges[i].v===v2)\r\n                {   v1=null\r\n                    v2=null\r\n                    return;\r\n                }\r\n                else if(this.state.edges[i].u===v2 && this.state.edges[i].v===v1)\r\n                {\r\n                    v1=null\r\n                    v2=null\r\n                    return\r\n                }\r\n            }\r\n            if(v1===v2)\r\n            {\r\n                v1=null\r\n                v2=null\r\n                return\r\n            }\r\n            this.setState((prev)=>{\r\n                edges:prev.edges.push({\r\n                    u:v1,\r\n                    v:v2\r\n                })\r\n            },function(){\r\n                this.addWeights()\r\n                adj[v1].push({vertex:v2,edgeNo:this.state.edges.length-1})\r\n                adj[v2].push({vertex:v1,edgeNo:this.state.edges.length-1})\r\n                v1=null\r\n                v2=null\r\n            })\r\n            this.forceUpdate()\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        done=false\r\n        for(let i=0;i<this.state.points.length;i++){\r\n            if(document.getElementById(`point${i}`).style.fill!=='red')\r\n            document.getElementById(`point${i}`).style.fill='#000'\r\n        }\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            document.getElementById(`edge${i}`).style.stroke='red'\r\n            document.getElementById(`weight${i}`).style.fill='black'\r\n        }\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            document.getElementById(`dist${i}`).textContent='âˆž';\r\n        }\r\n        parent=[]\r\n        this.forceUpdate();\r\n    }\r\n    clear(){\r\n        done=false\r\n        this.setState({\r\n            points:[],\r\n            edges:[],\r\n            dist:[]\r\n        },function(){\r\n            v1=null\r\n            v2=null\r\n            adj=[]\r\n            weights=[]\r\n            parent=[]\r\n        })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //GENERATE RANDOM GRAPH\r\n    generateRandomGraph(){\r\n        let lx=this.refs.svg.getBoundingClientRect().left+15\r\n        let rx=this.refs.svg.getBoundingClientRect().left+this.refs.svg.clientWidth-15;\r\n\r\n        let ly=this.refs.svg.getBoundingClientRect().top+15\r\n        let ry=this.refs.svg.getBoundingClientRect().top+this.refs.svg.clientHeight-15;\r\n        let n=getRandomInt(5,12)\r\n        let i;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            let flag;\r\n            setTimeout(() => {\r\n                flag=this.getMousePosition({clientX:getRandomInt(lx,rx),clientY:getRandomInt(ly,ry)})\r\n            }, i*delay);\r\n            if(flag===false)\r\n            i--;\r\n        }\r\n        for(let j=1;j<=1.1*n;j++)\r\n        {\r\n            setTimeout(() => {\r\n                let aq=getRandomInt(0,n-1)\r\n                this.drawLine(aq)\r\n                aq=getRandomInt(0,n-1)\r\n                this.drawLine(\" \"+aq)\r\n            }, i*delay);\r\n            i++;\r\n        }\r\n    }\r\n\r\n    showPath(s){\r\n        if(window.location.pathname==='/PrimMST') return\r\n        if(done===false)\r\n        return\r\n        let i=parent[s]\r\n        document.getElementById(`point${s}`).style.fill='yellow'\r\n        document.getElementById(`index${s}`).style.fill='black'\r\n        if(typeof i===\"undefined\")\r\n        return\r\n        while(i.vertex!==-1)\r\n        {\r\n            document.getElementById(`edge${i.edgeNo}`).style.stroke='yellow'\r\n            document.getElementById(`point${i.vertex}`).style.fill='yellow'\r\n            document.getElementById(`index${i.vertex}`).style.fill='black'\r\n            i=parent[i.vertex]\r\n        }\r\n    }\r\n\r\n    removePath(s){\r\n        if(window.location.pathname==='/PrimMST') return\r\n        if(done===false)\r\n        return\r\n        let i=parent[s]\r\n        document.getElementById(`point${s}`).style.fill=color1\r\n        document.getElementById(`index${s}`).style.fill='white'\r\n        if(typeof i===\"undefined\")\r\n        return\r\n        while(i.vertex!==-1)\r\n        {\r\n            document.getElementById(`edge${i.edgeNo}`).style.stroke='blue'\r\n            document.getElementById(`point${i.vertex}`).style.fill=color1\r\n            document.getElementById(`index${i.vertex}`).style.fill='white'\r\n            i=parent[i.vertex]\r\n        }\r\n    }\r\n\r\n    //DIJKSTRA'S SHORTEST PATH ALGORITHM\r\n    minDist(dist,sptSet) \r\n    {\r\n        // Initialize min value \r\n        let min = INT_MAX, min_index; \r\n        for (let v = 0; v < this.state.points.length; v++)\r\n            if (sptSet[v] === false && dist[v] <= min)\r\n                {\r\n                    min = dist[v]\r\n                    min_index = v\r\n                }\r\n        return min_index\r\n    }\r\n    dijkstraAnimations(s){\r\n        this.reset()\r\n        let ar=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            ar.push([])\r\n            for(let j=0;j<this.state.points.length;j++)\r\n            ar[i].push(0)\r\n        }\r\n        //forming adj matrix\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            ar[this.state.edges[i].u][this.state.edges[i].v]=({wt:weights[i],edgeNo:i})\r\n            ar[this.state.edges[i].v][this.state.edges[i].u]=({wt:weights[i],edgeNo:i})\r\n        }\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        vis[i]=false;\r\n        let animations=[]\r\n        let dist=[]\r\n        parent=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        dist[i]=100000\r\n        dist[s]=0\r\n        parent[s]={vertex:-1,edgeNo:-1}\r\n        animations.push({\r\n            x:s,\r\n            y:0,\r\n            color:'setdist'\r\n        })\r\n        for(let it=0;it<this.state.points.length;it++)\r\n        {\r\n            let u=this.minDist(dist,vis)\r\n            if(dist[u]===INT_MAX)\r\n            return animations;\r\n            vis[u]=true\r\n            animations.push({\r\n                x:u,\r\n                y:-1,\r\n                color:'confirmdist'\r\n            })\r\n            for(let v=0;v<this.state.points.length;v++)\r\n            {\r\n                if(!vis[v] && ar[u][v].wt && dist[u]+ar[u][v].wt<dist[v])\r\n                {\r\n                    parent[v]={vertex:u,edgeNo:ar[u][v].edgeNo}\r\n                    dist[v]=dist[u]+ar[u][v].wt\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'shrinkEdge'\r\n                    })\r\n                    animations.push({\r\n                        x:v,\r\n                        y:dist[v],\r\n                        color:'setdist'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return animations\r\n    }\r\n\r\n    dijkstra(s){\r\n        if(s>=this.state.points.length)\r\n        return\r\n        if(s===\"\" && s!=='0')\r\n        {\r\n            alert(\"Enter a source vertex\")\r\n            return\r\n        }\r\n        for(let i=0;i<s.length;i++)\r\n        {\r\n            if(s[i]!=='0' && s[i]!=='1' && s[i]!=='2' && s[i]!=='3' && s[i]!=='4' && s[i]!=='5' && s[i]!=='6' && s[i]!=='7' && s[i]!=='8' && s[i]!=='9')\r\n            {\r\n                alert(\"Enter an integer as source vertex\")\r\n                return\r\n            }\r\n        }\r\n        s=parseInt(s)\r\n        const animations=this.dijkstraAnimations(s)\r\n        let len=animations.length\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge'){\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='5'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='shrinkEdge')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='2'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='setdist')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill='blue'\r\n                    q=document.getElementById(`dist${animations[i].x}`);\r\n                    q.textContent=animations[i].y\r\n                    \r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n            else\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill=color1\r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n        }\r\n        done=true\r\n    }\r\n    \r\n    //PRIM'S ALGORITHM\r\n    minDist(dist,sptSet) \r\n    {\r\n        // Initialize min value \r\n        let min = INT_MAX, min_index; \r\n        for (let v = 0; v < this.state.points.length; v++) \r\n            if (sptSet[v] === false && dist[v] <= min) \r\n            {\r\n                min = dist[v]\r\n                min_index = v;\r\n            }\r\n        return min_index;\r\n    }\r\n    primAnimations(s){\r\n        this.reset()\r\n        let ar=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        {\r\n            ar.push([])\r\n            for(let j=0;j<this.state.points.length;j++)\r\n            ar[i].push(0)\r\n        }\r\n        //forming adj matrix\r\n        for(let i=0;i<this.state.edges.length;i++)\r\n        {\r\n            ar[this.state.edges[i].u][this.state.edges[i].v]=({wt:weights[i],edgeNo:i})\r\n            ar[this.state.edges[i].v][this.state.edges[i].u]=({wt:weights[i],edgeNo:i})\r\n        }\r\n        let vis=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        vis[i]=false;\r\n        let animations=[]\r\n        let dist=[]\r\n        parent=[]\r\n        for(let i=0;i<this.state.points.length;i++)\r\n        dist[i]=100000\r\n        dist[s]=0\r\n        parent[s]={vertex:-1,edgeNo:-1}\r\n        animations.push({\r\n            x:s,\r\n            y:0,\r\n            color:'setdist'\r\n        })\r\n        for(let it=0;it<this.state.points.length;it++)\r\n        {\r\n            let u=this.minDist(dist,vis)\r\n            if(dist[u]===INT_MAX)\r\n            return [];\r\n            vis[u]=true\r\n            animations.push({\r\n                x:u,\r\n                y:parent[u].edgeNo,\r\n                color:'confirmdist'\r\n            })\r\n            for(let v=0;v<this.state.points.length;v++)\r\n            {\r\n                if(!vis[v] && ar[u][v].wt && ar[u][v].wt<dist[v])\r\n                {\r\n                    parent[v]={vertex:u,edgeNo:ar[u][v].edgeNo}\r\n                    dist[v]=ar[u][v].wt\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'edge'\r\n                    })\r\n                    animations.push({\r\n                        x:ar[u][v].edgeNo,\r\n                        y:-1,\r\n                        color:'shrinkEdge'\r\n                    })\r\n                    animations.push({\r\n                        x:v,\r\n                        y:dist[v],\r\n                        color:'setdist'\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        \r\n        return animations\r\n    }\r\n\r\n    prim(s){\r\n        if(s>=this.state.points.length)\r\n        return\r\n        if(s===\"\" && s!=='0')\r\n        {\r\n            alert(\"Enter a source vertex\")\r\n            return\r\n        }\r\n        for(let i=0;i<s.length;i++)\r\n        {\r\n            if(s[i]!=='0' && s[i]!=='1' && s[i]!=='2' && s[i]!=='3' && s[i]!=='4' && s[i]!=='5' && s[i]!=='6' && s[i]!=='7' && s[i]!=='8' && s[i]!=='9')\r\n            {\r\n                alert(\"Enter an integer as source vertex\")\r\n                return\r\n            }\r\n        }\r\n        s=parseInt(s)\r\n        const animations=this.primAnimations(s)\r\n        let len=animations.length\r\n        if(len===0) return\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            if(animations[i].color==='edge'){\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='5'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='shrinkEdge')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`edge${animations[i].x}`)\r\n                    q.style.stroke='blue'\r\n                    q.style.strokeWidth='2'\r\n                    }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n            else if(animations[i].color==='setdist')\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill='blue'\r\n                    q=document.getElementById(`dist${animations[i].x}`);\r\n                    q.textContent=animations[i].y\r\n                    \r\n                }, i*delay);\r\n                timeouts.push(tm);\r\n            }\r\n            else\r\n            {\r\n                let tm=setTimeout(() => {\r\n                    let q=document.getElementById(`point${animations[i].x}`)\r\n                    q.style.fill=color1\r\n                    if(animations[i].y!=-1) document.getElementById(`edge${animations[i].y}`).style.stroke=color1\r\n                }, i*delay);\r\n                timeouts.push(tm)\r\n            }\r\n        }\r\n        let tm=setTimeout(() => {\r\n            for(let i=0;i<this.state.edges.length;i++)\r\n            {\r\n                if(document.getElementById(`edge${i}`).style.stroke!==color1)\r\n                {\r\n                    document.getElementById(`edge${i}`).style.stroke='#bfbfbf'\r\n                    document.getElementById(`weight${i}`).style.fill='#bfbfbf'\r\n                }\r\n            }\r\n        }, len*delay);\r\n        timeouts.push(tm)\r\n    }\r\n\r\n    render() {\r\n        var pts=this.state.points.map((x,idx)=>{\r\n            return(\r\n            <circle key={\"point\"+idx} id={\"point\"+idx} cx={x.x} cy={x.y} r={r} stroke=\"black\" onClick={(event)=>this.drawLine(idx)} strokeWidth=\"2\" style={{fill:\"#000\",transition:'all .2s linear',cursor:'pointer'}} onMouseOver={()=>this.showPath(idx)} onMouseOut={()=>this.removePath(idx)} onload={makeDraggable(this)}/>\r\n            )\r\n        })\r\n        var ptsidx=this.state.points.map((pt,idx)=>{\r\n            return(\r\n                <text key={\"index\"+idx} id={\"index\"+idx} fontSize=\"14\" fontFamily=\"Arial\" x={pt.x-4} y={pt.y+4} onClick={(event)=>this.drawLine(idx)} style={{fill:\"#fff\",transition:'all .2s linear',cursor:'pointer'}} onMouseOver={()=>this.showPath(idx)} onMouseOut={()=>this.removePath(idx)}>{idx}</text>\r\n            )\r\n        })\r\n        var lines=this.state.edges.map((q,idx)=>{\r\n            return(\r\n                <line key={\"edge\"+idx} id={\"edge\"+idx} x1={this.state.points[q.u].x} y1={this.state.points[q.u].y} x2={this.state.points[q.v].x} y2={this.state.points[q.v].y} style={{stroke:'red',strokeWidth:'2',zIndex:'-1',transition:'all .2s linear'}} />\r\n            )\r\n        })\r\n        var edgeWeights=this.state.edges.map((edge,idx)=>{\r\n            return(\r\n                <text key={\"weight\"+idx} id={\"weight\"+idx} fontSize=\"14\" fontFamily=\"Arial\" fill=\"#000\" x={(this.state.points[edge.u].x+this.state.points[edge.v].x)/2.0} y={(this.state.points[edge.u].y+this.state.points[edge.v].y)/2.0} >{weights[idx]}</text>\r\n            )\r\n        })\r\n        var dists=this.state.points.map((x,idx)=>{\r\n            return(\r\n                <text key={\"dist\"+idx} id={\"dist\"+idx} fontSize='14' fontFamily='Arial' fill='#000' x={x.x+r+2} y={x.y+r+2}>&infin;</text>\r\n            )\r\n        })\r\n        \r\n        return (\r\n        <div>\r\n            <center>\r\n            {window.location.pathname==='/dijkstra'?<h3>Dijkstra's Shortest Path Algorithm</h3>:<h3>Prim's Minimal Spanning Tree Algorithm</h3>}\r\n            {window.location.pathname==='/dijkstra'?<button className=\"button button4\" onClick={()=>this.dijkstra(this.state.src)}>Dijkstra's Algorithm</button> : <button className=\"button button4\" onClick={()=>this.prim(this.state.src)}>Prim's Algorithm</button>}\r\n\r\n            <button className=\"button button4\" onClick={()=>this.randomWeights()}>Randomize edge weights</button>\r\n            <button className=\"button button4\" onClick={()=>this.reset()}>Reset</button>\r\n            <button className=\"button button4\" onClick={()=>this.clear()}>Clear Canvas</button>\r\n            <text style={{fontFamily:'Georgia'}}>&nbsp;&nbsp;&nbsp;Source/Starting vertex&nbsp;</text>\r\n            <input type=\"text\" id=\"src\" value={this.state.src} style={{width:'25px'}} onChange={(e)=>this.changeSrc(e)} />\r\n            </center>\r\n            <center>\r\n            <svg paintOrder='markers' ref='svg' width={window.innerWidth*.995} height={window.innerHeight*.88} style={{border:'2px solid black',backgroundColor:'#dddddd',cursor:'crosshair'}} onClick={(event)=>this.getMousePosition(event)} >\r\n            {\r\n                window.location.pathname==='/dijkstra'?<rect><title>1.Click to plot some points.&#13;2.Connect two points by clicking on them consecutively.&#13;3.Run the algorithm. &#13;4.Hover on any vertex to see the shortest path from the root vertex.</title></rect> : <rect><title>1.Click to plot some points.&#13;2.Connect two points by clicking on them consecutively.&#13;3.Run the algo and Enjoy!!!</title></rect>\r\n            }\r\n            {dists}\r\n            {edgeWeights}\r\n            {lines}\r\n            {pts}\r\n            {ptsidx}\r\n            </svg>\r\n            </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShortestPath\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}"]},"metadata":{},"sourceType":"module"}